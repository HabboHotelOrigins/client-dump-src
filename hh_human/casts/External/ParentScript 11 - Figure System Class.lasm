property pFigurePartListLoadedFlag, pAvailableSetListLoadedFlag, pFigureData, pDontProfile

on construct me
  [  0] pushzero ................................ <0>
  [  1] setprop 686 ............................. pFigurePartListLoadedFlag = 0
  [  4] pushzero ................................ <0>
  [  5] setprop 687 ............................. pAvailableSetListLoadedFlag = 0
  [  8] pushcons 0 .............................. <"figurepartlist.loaded">
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 2 ...................... <"figurepartlist.loaded", 0>
  [ 13] extcall 688 ............................. setVariable("figurepartlist.loaded", 0)
  [ 16] pushcons 1 .............................. <"figure.xml.loaded">
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 2 ...................... <"figure.xml.loaded", 0>
  [ 21] extcall 688 ............................. setVariable("figure.xml.loaded", 0)
  [ 24] getparam 0 .............................. <me>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 2 ...................... <me, 1>
  [ 30] objcall 685 ............................. me.regMsgList(1)
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 677 ............................. me.loadPartSetXML()
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglistnoret 1 ...................... <me>
  [ 44] objcall 678 ............................. me.loadActionSetXML()
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglistnoret 1 ...................... <me>
  [ 51] objcall 679 ............................. me.loadAnimationSetXML()
  [ 54] pushsymb 404 ............................ <#temp>
  [ 57] pushcons 2 .............................. <"Figure Data Class">
  [ 59] pusharglist 2 ........................... <#temp, "Figure Data Class">
  [ 61] extcall 403 ............................. <createObject(#temp, "Figure Data Class")>
  [ 64] setprop 689 ............................. pFigureData = createObject(#temp, "Figure Data Class")
  [ 67] getparam 0 .............................. <me>
  [ 69] pusharglistnoret 1 ...................... <me>
  [ 71] objcall 670 ............................. me.setProfiling()
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglistnoret 1 ...................... <1>
  [ 78] extcall 189 ............................. return 1
  [ 80] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 685 ............................. me.regMsgList(0)
  [  8] pushint8 1 .............................. <1>
  [ 10] pusharglistnoret 1 ...................... <1>
  [ 12] extcall 189 ............................. return 1
  [ 14] ret
end

on setProfiling
  [  0] getprop 690 ............................. <pDontProfile>
  [  3] pusharglist 1 ........................... <pDontProfile>
  [  5] extcall 194 ............................. <voidp(pDontProfile)>
  [  7] jmpifz [ 44] ............................ if voidp(pDontProfile) then
  [ 10] pushint8 1 .............................. <1>
  [ 12] setprop 690 ............................. pDontProfile = 1
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 691 ............................. <getObjectManager()>
  [ 20] pushsymb 692 ............................ <#variable_manager>
  [ 23] pusharglist 2 ........................... <getObjectManager(), #variable_manager>
  [ 25] objcall 693 ............................. <getObjectManager().managerExists(#variable_manager)>
  [ 28] jmpifz [ 44] ............................ if getObjectManager().managerExists(#variable_manager) then
  [ 31] pushcons 3 .............................. <"profile.fields.enabled">
  [ 33] pusharglist 1 ........................... <"profile.fields.enabled">
  [ 35] extcall 174 ............................. <variableExists("profile.fields.enabled")>
  [ 37] jmpifz [ 44] ............................ if variableExists("profile.fields.enabled") then
  [ 40] pushzero ................................ <0>
  [ 41] setprop 690 ............................. pDontProfile = 0
  [ 44] ret
end

on define me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] getobjprop 180 .......................... <tProps.ilk>
  [  4] pushsymb 183 ............................ <#propList>
  [  6] nteq .................................... <tProps.ilk <> #propList>
  [  7] jmpifz [ 31] ............................ if tProps.ilk <> #propList then
  [ 10] pushcons 4 .............................. <"external.figurepartlist.txt">
  [ 12] pusharglist 1 ........................... <"external.figurepartlist.txt">
  [ 14] extcall 164 ............................. <getVariable("external.figurepartlist.txt")>
  [ 16] setlocal 0 .............................. tURL = getVariable("external.figurepartlist.txt")
  [ 18] pushcons 5 .............................. <"type">
  [ 20] pushcons 6 .............................. <"url">
  [ 22] pushcons 7 .............................. <"source">
  [ 24] getlocal 0 .............................. <tURL>
  [ 26] pusharglist 4 ........................... <["type": "url", "source": tURL]>
  [ 28] pushproplist ............................ <["type": "url", "source": tURL]>
  [ 29] setparam 1 .............................. tProps = ["type": "url", "source": tURL]
  [ 31] getparam 1 .............................. <tProps>
  [ 33] pushcons 5 .............................. <"type">
  [ 35] pusharglist 2 ........................... <tProps, "type">
  [ 37] objcall 173 ............................. <tProps["type"]>
  [ 39] pusharglist 1 ........................... <tProps["type"]>
  [ 41] extcall 194 ............................. <voidp(tProps["type"])>
  [ 43] jmpifz [ 58] ............................ if voidp(tProps["type"]) then
  [ 46] getparam 0 .............................. <me>
  [ 48] pushcons 8 .............................. <"source type of figure list is void">
  [ 50] pushsymb 2 .............................. <#define>
  [ 52] pushsymb 177 ............................ <#major>
  [ 54] pusharglistnoret 4 ...................... <me, "source type of figure list is void", #define, #major>
  [ 56] extcall 176 ............................. error(me, "source type of figure list is void", #define, #major)
  [ 58] getparam 1 .............................. <tProps>
  [ 60] pushcons 5 .............................. <"type">
  [ 62] pusharglist 2 ........................... <tProps, "type">
  [ 64] objcall 173 ............................. <tProps["type"]>
  [ 66] peek 0 .................................. case tProps["type"] of
  [ 68] pushcons 6 .............................. <"url">
  [ 70] eq
  [ 71] jmpifz [ 92] ............................ (case) "url":
  [ 74] getparam 0 .............................. <me>
  [ 76] getparam 1 .............................. <tProps>
  [ 78] pushcons 7 .............................. <"source">
  [ 80] pusharglist 2 ........................... <tProps, "source">
  [ 82] objcall 173 ............................. <tProps["source"]>
  [ 84] pusharglistnoret 2 ...................... <me, tProps["source"]>
  [ 86] objcall 674 ............................. me.loadFigurePartList(tProps["source"])
  [ 89] jmp [132]
  [ 92] peek 0
  [ 94] pushcons 9 .............................. <"proplist">
  [ 96] eq
  [ 97] jmpifz [120] ............................ (case) "proplist":
  [100] getparam 1 .............................. <tProps>
  [102] pushcons 7 .............................. <"source">
  [104] pusharglist 2 ........................... <tProps, "source">
  [106] objcall 173 ............................. <tProps["source"]>
  [108] setlocal 1 .............................. tProlist = tProps["source"]
  [110] getlocal 1 .............................. <tProlist>
  [112] pusharglistnoret 1 ...................... <tProlist>
  [114] extcall 694 ............................. initializeValidPartLists(tProlist)
  [117] jmp [132] ............................... (case) otherwise:
  [120] getparam 0 .............................. <me>
  [122] pushcons 10 ............................. <"incorrect source type, can\xABt run define ">
  [124] pushsymb 2 .............................. <#define>
  [126] pushsymb 177 ............................ <#major>
  [128] pusharglistnoret 4 ...................... <me, "incorrect source type, can\xABt run define ", #define, #major>
  [130] extcall 176 ............................. error(me, "incorrect source type, can\xABt run define ", #define, #major)
  [132] pop 1 ................................... end case
  [134] ret
end

on parseFigure me, tFigureData, tsex, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 194 ............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] pushcons 11 ............................. <"user">
  [ 11] setparam 3 .............................. tClass = "user"
  [ 13] getparam 3 .............................. <tClass>
  [ 15] peek 0 .................................. case tClass of
  [ 17] pushcons 11 ............................. <"user">
  [ 19] nteq
  [ 20] jmpifz [ 39] ............................ (case) "user", ...
  [ 23] peek 0
  [ 25] pushcons 12 ............................. <"pelle">
  [ 27] nteq
  [ 28] jmpifz [ 39] ............................ (case) ..., "pelle", ...
  [ 31] peek 0
  [ 33] pushcons 13 ............................. <"bot">
  [ 35] eq
  [ 36] jmpifz [398] ............................ (case) ..., "bot":
  [ 39] getparam 3 .............................. <tClass>
  [ 41] pushcons 13 ............................. <"bot">
  [ 43] eq ...................................... <tClass = "bot">
  [ 44] getparam 1 .............................. <tFigureData>
  [ 46] pushcons 14 ............................. <"&">
  [ 48] containsstr ............................. <tFigureData contains "&">
  [ 49] and ..................................... <(tClass = "bot") and (tFigureData contains "&")>
  [ 50] jmpifz [ 72] ............................ if (tClass = "bot") and (tFigureData contains "&") then
  [ 53] pop 1
  [ 55] getparam 0 .............................. <me>
  [ 57] getparam 1 .............................. <tFigureData>
  [ 59] getparam 2 .............................. <tsex>
  [ 61] getparam 3 .............................. <tClass>
  [ 63] pusharglist 4 ........................... <me, tFigureData, tsex, tClass>
  [ 65] objcall 942 ............................. <me.parseOldBotFigure(tFigureData, tsex, tClass)>
  [ 68] pusharglistnoret 1 ...................... <me.parseOldBotFigure(tFigureData, tsex, tClass)>
  [ 70] extcall 189 ............................. return me.parseOldBotFigure(tFigureData, tsex, tClass)
  [ 72] pusharglist 0 ........................... <[:]>
  [ 74] pushproplist ............................ <[:]>
  [ 75] setlocal 0 .............................. tTempFigure = [:]
  [ 77] getparam 1 .............................. <tFigureData>
  [ 79] pushsymb 353 ............................ <#char>
  [ 82] pusharglist 2 ........................... <tFigureData, #char>
  [ 84] objcall 172 ............................. <tFigureData.char.count>
  [ 86] pushint8 5 .............................. <5>
  [ 88] mod ..................................... <tFigureData.char.count mod 5>
  [ 89] pushzero ................................ <0>
  [ 90] eq ...................................... <(tFigureData.char.count mod 5) = 0>
  [ 91] getparam 1 .............................. <tFigureData>
  [ 93] pusharglist 1 ........................... <tFigureData>
  [ 95] extcall 274 ............................. <integer(tFigureData)>
  [ 98] pusharglist 1 ........................... <integer(tFigureData)>
  [100] extcall 558 ............................. <integerp(integer(tFigureData))>
  [103] and ..................................... <((tFigureData.char.count mod 5) = 0) and integerp(integer(tFigureData))>
  [104] jmpifz [244] ............................ if ((tFigureData.char.count mod 5) = 0) and integerp(integer(tFigureData)) then / else
  [107] getparam 1 .............................. <tFigureData>
  [109] pushsymb 353 ............................ <#char>
  [112] pushint8 1 .............................. <1>
  [114] getparam 1 .............................. <tFigureData>
  [116] pushsymb 353 ............................ <#char>
  [119] pusharglist 2 ........................... <tFigureData, #char>
  [121] objcall 172 ............................. <tFigureData.char.count>
  [123] pusharglist 4 ........................... <tFigureData, #char, 1, tFigureData.char.count>
  [125] objcall 311 ............................. <tFigureData.char[1..tFigureData.char.count]>
  [128] setparam 1 .............................. tFigureData = tFigureData.char[1..tFigureData.char.count]
  [130] getparam 1 .............................. <tFigureData>
  [132] pushsymb 353 ............................ <#char>
  [135] pusharglist 2 ........................... <tFigureData, #char>
  [137] objcall 172 ............................. <tFigureData.char.count>
  [139] pushint8 5 .............................. <5>
  [141] div ..................................... <tFigureData.char.count / 5>
  [142] setlocal 1 .............................. tPartCount = tFigureData.char.count / 5
  [144] pushzero ................................ <0>
  [145] setlocal 2
  [147] getlocal 2
  [149] getlocal 1 .............................. <tPartCount>
  [151] pushint8 1 .............................. <1>
  [153] sub ..................................... <tPartCount - 1>
  [154] lteq
  [155] jmpifz [241] ............................ repeat with i = 0 to tPartCount - 1
  [158] getparam 1 .............................. <tFigureData>
  [160] pushsymb 353 ............................ <#char>
  [163] getlocal 2 .............................. <i>
  [165] pushint8 5 .............................. <5>
  [167] mul ..................................... <i * 5>
  [168] pushint8 1 .............................. <1>
  [170] add ..................................... <(i * 5) + 1>
  [171] getlocal 2 .............................. <i>
  [173] pushint8 5 .............................. <5>
  [175] mul ..................................... <i * 5>
  [176] pushint8 5 .............................. <5>
  [178] add ..................................... <(i * 5) + 5>
  [179] pusharglist 4 ........................... <tFigureData, #char, (i * 5) + 1, (i * 5) + 5>
  [181] objcall 311 ............................. <tFigureData.char[(i * 5) + 1..(i * 5) + 5]>
  [184] setlocal 3 .............................. tPart = tFigureData.char[(i * 5) + 1..(i * 5) + 5]
  [186] getlocal 3 .............................. <tPart>
  [188] pushsymb 353 ............................ <#char>
  [191] pushint8 1 .............................. <1>
  [193] pushint8 3 .............................. <3>
  [195] pusharglist 4 ........................... <tPart, #char, 1, 3>
  [197] objcall 311 ............................. <tPart.char[1..3]>
  [200] setlocal 4 .............................. tSetID = tPart.char[1..3]
  [202] getlocal 3 .............................. <tPart>
  [204] pushsymb 353 ............................ <#char>
  [207] pushint8 4 .............................. <4>
  [209] pushint8 5 .............................. <5>
  [211] pusharglist 4 ........................... <tPart, #char, 4, 5>
  [213] objcall 311 ............................. <tPart.char[4..5]>
  [216] setlocal 5 .............................. tColorId = tPart.char[4..5]
  [218] getlocal 0 .............................. <tTempFigure>
  [220] getlocal 4 .............................. <tSetID>
  [222] getlocal 5 .............................. <tColorId>
  [224] pusharglist 1 ........................... <tColorId>
  [226] extcall 156 ............................. <value(tColorId)>
  [228] pusharglistnoret 3 ...................... <tTempFigure, tSetID, value(tColorId)>
  [230] objcall 175 ............................. tTempFigure[tSetID] = value(tColorId)
  [232] pushint8 1
  [234] getlocal 2
  [236] add
  [237] setlocal 2
  [239] endrepeat [147]
  [241] jmp [382]
  [244] getmovieprop 350 ........................ <the itemDelimiter>
  [247] setlocal 6 .............................. tDelim = the itemDelimiter
  [249] pushcons 15 ............................. <".">
  [251] setmovieprop 350 ........................ the itemDelimiter = "."
  [254] getparam 1 .............................. <tFigureData>
  [256] pushsymb 354 ............................ <#item>
  [259] pusharglist 2 ........................... <tFigureData, #item>
  [261] objcall 172 ............................. <tFigureData.item.count>
  [263] setlocal 1 .............................. tPartCount = tFigureData.item.count
  [265] pushint8 1 .............................. <1>
  [267] setlocal 2
  [269] getlocal 2
  [271] getlocal 1 .............................. <tPartCount>
  [273] lteq
  [274] jmpifz [377] ............................ repeat with i = 1 to tPartCount
  [277] pushcons 15 ............................. <".">
  [279] setmovieprop 350 ........................ the itemDelimiter = "."
  [282] getparam 1 .............................. <tFigureData>
  [284] pushsymb 354 ............................ <#item>
  [287] getlocal 2 .............................. <i>
  [289] pusharglist 3 ........................... <tFigureData, #item, i>
  [291] objcall 311 ............................. <tFigureData.item[i]>
  [294] setlocal 7 .............................. tPartData = tFigureData.item[i]
  [296] pushcons 16 ............................. <"-">
  [298] setmovieprop 350 ........................ the itemDelimiter = "-"
  [301] getlocal 7 .............................. <tPartData>
  [303] pushsymb 354 ............................ <#item>
  [306] pusharglist 2 ........................... <tPartData, #item>
  [308] objcall 172 ............................. <tPartData.item.count>
  [310] pushint8 3 .............................. <3>
  [312] gteq .................................... <tPartData.item.count >= 3>
  [313] jmpifz [368] ............................ if tPartData.item.count >= 3 then
  [316] getlocal 7 .............................. <tPartData>
  [318] pushsymb 354 ............................ <#item>
  [321] pushint8 1 .............................. <1>
  [323] pusharglist 3 ........................... <tPartData, #item, 1>
  [325] objcall 311 ............................. <tPartData.item[1]>
  [328] setlocal 8 .............................. tSetType = tPartData.item[1]
  [330] getlocal 7 .............................. <tPartData>
  [332] pushsymb 354 ............................ <#item>
  [335] pushint8 2 .............................. <2>
  [337] pusharglist 3 ........................... <tPartData, #item, 2>
  [339] objcall 311 ............................. <tPartData.item[2]>
  [342] setlocal 4 .............................. tSetID = tPartData.item[2]
  [344] getlocal 7 .............................. <tPartData>
  [346] pushsymb 354 ............................ <#item>
  [349] pushint8 3 .............................. <3>
  [351] pusharglist 3 ........................... <tPartData, #item, 3>
  [353] objcall 311 ............................. <tPartData.item[3]>
  [356] setlocal 5 .............................. tColorId = tPartData.item[3]
  [358] getlocal 0 .............................. <tTempFigure>
  [360] getlocal 4 .............................. <tSetID>
  [362] getlocal 5 .............................. <tColorId>
  [364] pusharglistnoret 3 ...................... <tTempFigure, tSetID, tColorId>
  [366] objcall 175 ............................. tTempFigure[tSetID] = tColorId
  [368] pushint8 1
  [370] getlocal 2
  [372] add
  [373] setlocal 2
  [375] endrepeat [269]
  [377] getlocal 6 .............................. <tDelim>
  [379] setmovieprop 350 ........................ the itemDelimiter = tDelim
  [382] getparam 0 .............................. <me>
  [384] getlocal 0 .............................. <tTempFigure>
  [386] getparam 2 .............................. <tsex>
  [388] pusharglist 3 ........................... <me, tTempFigure, tsex>
  [390] objcall 672 ............................. <me.parseNewTypeFigure(tTempFigure, tsex)>
  [393] setlocal 9 .............................. tFigure = me.parseNewTypeFigure(tTempFigure, tsex)
  [395] jmp [406] ............................... (case) otherwise:
  [398] pop 1
  [400] getparam 1 .............................. <tFigureData>
  [402] pusharglistnoret 1 ...................... <tFigureData>
  [404] extcall 189 ............................. return tFigureData
  [406] pop 1 ................................... end case
  [408] getlocal 9 .............................. <tFigure>
  [410] pusharglistnoret 1 ...................... <tFigure>
  [412] extcall 189 ............................. return tFigure
  [414] ret
end

on parseOldBotFigure me, tFigureData, tsex, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pushcons 13 ............................. <"bot">
  [  4] nteq .................................... <tClass <> "bot">
  [  5] jmpifz [ 14] ............................ if tClass <> "bot" then
  [  8] getparam 1 .............................. <tFigureData>
  [ 10] pusharglistnoret 1 ...................... <tFigureData>
  [ 12] extcall 189 ............................. return tFigureData
  [ 14] pushcons 14 ............................. <"&">
  [ 16] setmovieprop 350 ........................ the itemDelimiter = "&"
  [ 19] getparam 1 .............................. <tFigureData>
  [ 21] pushsymb 354 ............................ <#item>
  [ 24] pusharglist 2 ........................... <tFigureData, #item>
  [ 26] objcall 172 ............................. <tFigureData.item.count>
  [ 28] setlocal 0 .............................. tPartCount = tFigureData.item.count
  [ 30] pusharglist 0 ........................... <[:]>
  [ 32] pushproplist ............................ <[:]>
  [ 33] setlocal 1 .............................. tFigure = [:]
  [ 35] pushint8 1 .............................. <1>
  [ 37] setlocal 2
  [ 39] getlocal 2
  [ 41] getlocal 0 .............................. <tPartCount>
  [ 43] lteq
  [ 44] jmpifz [469] ............................ repeat with i = 1 to tPartCount
  [ 47] getparam 1 .............................. <tFigureData>
  [ 49] pushsymb 354 ............................ <#item>
  [ 52] getlocal 2 .............................. <i>
  [ 54] pusharglist 3 ........................... <tFigureData, #item, i>
  [ 56] objcall 311 ............................. <tFigureData.item[i]>
  [ 59] setlocal 3 .............................. tPart = tFigureData.item[i]
  [ 61] pushcons 17 ............................. <"=">
  [ 63] setmovieprop 350 ........................ the itemDelimiter = "="
  [ 66] getlocal 3 .............................. <tPart>
  [ 68] pushsymb 354 ............................ <#item>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 3 ........................... <tPart, #item, 1>
  [ 75] objcall 311 ............................. <tPart.item[1]>
  [ 78] setlocal 4 .............................. tProp = tPart.item[1]
  [ 80] getlocal 3 .............................. <tPart>
  [ 82] pushsymb 354 ............................ <#item>
  [ 85] pushint8 2 .............................. <2>
  [ 87] pusharglist 3 ........................... <tPart, #item, 2>
  [ 89] objcall 311 ............................. <tPart.item[2]>
  [ 92] setlocal 5 .............................. tDesc = tPart.item[2]
  [ 94] pushcons 18 ............................. <"/">
  [ 96] setmovieprop 350 ........................ the itemDelimiter = "/"
  [ 99] pusharglist 0 ........................... <[:]>
  [101] pushproplist ............................ <[:]>
  [102] setlocal 6 .............................. tValue = [:]
  [104] getlocal 6 .............................. <tValue>
  [106] pushcons 19 ............................. <"model">
  [108] getlocal 5 .............................. <tDesc>
  [110] pushsymb 354 ............................ <#item>
  [113] pushint8 1 .............................. <1>
  [115] pusharglist 3 ........................... <tDesc, #item, 1>
  [117] objcall 311 ............................. <tDesc.item[1]>
  [120] pusharglistnoret 3 ...................... <tValue, "model", tDesc.item[1]>
  [122] objcall 175 ............................. tValue["model"] = tDesc.item[1]
  [124] getlocal 6 .............................. <tValue>
  [126] pushcons 19 ............................. <"model">
  [128] pusharglist 2 ........................... <tValue, "model">
  [130] objcall 173 ............................. <tValue["model"]>
  [132] pushsymb 353 ............................ <#char>
  [135] pushint8 1 .............................. <1>
  [137] pusharglist 3 ........................... <tValue["model"], #char, 1>
  [139] objcall 311 ............................. <tValue["model"].char[1]>
  [142] pushcons 20 ............................. <"0">
  [144] eq ...................................... <tValue["model"].char[1] = "0">
  [145] jmpifz [187] ............................ repeat while tValue["model"].char[1] = "0"
  [148] getlocal 6 .............................. <tValue>
  [150] pushcons 19 ............................. <"model">
  [152] getlocal 6 .............................. <tValue>
  [154] pushcons 19 ............................. <"model">
  [156] pusharglist 2 ........................... <tValue, "model">
  [158] objcall 173 ............................. <tValue["model"]>
  [160] pushsymb 353 ............................ <#char>
  [163] pushint8 2 .............................. <2>
  [165] getlocal 6 .............................. <tValue>
  [167] pushcons 19 ............................. <"model">
  [169] pusharglist 2 ........................... <tValue, "model">
  [171] objcall 173 ............................. <tValue["model"]>
  [173] getobjprop 466 .......................... <tValue["model"].length>
  [176] pusharglist 4 ........................... <tValue["model"], #char, 2, tValue["model"].length>
  [178] objcall 311 ............................. <tValue["model"].char[2..tValue["model"].length]>
  [181] pusharglistnoret 3 ...................... <tValue, "model", tValue["model"].char[2..tValue["model"].length]>
  [183] objcall 175 ............................. tValue["model"] = tValue["model"].char[2..tValue["model"].length]
  [185] endrepeat [124]
  [187] getlocal 5 .............................. <tDesc>
  [189] pushsymb 354 ............................ <#item>
  [192] pushint8 2 .............................. <2>
  [194] pusharglist 3 ........................... <tDesc, #item, 2>
  [196] objcall 352 ............................. <tDesc.item[2]>
  [199] pushsymb 351 ............................ <#line>
  [202] pushint8 1 .............................. <1>
  [204] pusharglist 3 ........................... <tDesc.item[2], #line, 1>
  [206] objcall 311 ............................. <tDesc.item[2].line[1]>
  [209] setlocal 7 .............................. tColor = tDesc.item[2].line[1]
  [211] pushcons 21 ............................. <",">
  [213] setmovieprop 350 ........................ the itemDelimiter = ","
  [216] getlocal 7 .............................. <tColor>
  [218] pushsymb 354 ............................ <#item>
  [221] pusharglist 2 ........................... <tColor, #item>
  [223] objcall 172 ............................. <tColor.item.count>
  [225] pushint8 1 .............................. <1>
  [227] eq ...................................... <tColor.item.count = 1>
  [228] jmpifz [304] ............................ if tColor.item.count = 1 then / else
  [231] getlocal 7 .............................. <tColor>
  [233] pusharglist 1 ........................... <tColor>
  [235] extcall 274 ............................. <integer(tColor)>
  [238] pushzero ................................ <0>
  [239] eq ...................................... <integer(tColor) = 0>
  [240] jmpifz [260] ............................ if integer(tColor) = 0 then / else
  [243] getlocal 6 .............................. <tValue>
  [245] pushcons 22 ............................. <"color">
  [247] pushcons 23 ............................. <"EEEEEE">
  [249] pusharglist 1 ........................... <"EEEEEE">
  [251] extcall 136 ............................. <rgb("EEEEEE")>
  [253] pusharglistnoret 3 ...................... <tValue, "color", rgb("EEEEEE")>
  [255] objcall 175 ............................. tValue["color"] = rgb("EEEEEE")
  [257] jmp [301]
  [260] getlocal 7 .............................. <tColor>
  [262] pusharglist 1 ........................... <tColor>
  [264] extcall 274 ............................. <integer(tColor)>
  [267] pusharglist 1 ........................... <integer(tColor)>
  [269] extcall 287 ............................. <paletteIndex(integer(tColor))>
  [272] setlocal 8 .............................. tPalette = paletteIndex(integer(tColor))
  [274] getlocal 6 .............................. <tValue>
  [276] pushcons 22 ............................. <"color">
  [278] getlocal 8 .............................. <tPalette>
  [280] getobjprop 400 .......................... <tPalette.red>
  [283] getlocal 8 .............................. <tPalette>
  [285] getobjprop 401 .......................... <tPalette.green>
  [288] getlocal 8 .............................. <tPalette>
  [290] getobjprop 402 .......................... <tPalette.blue>
  [293] pusharglist 3 ........................... <tPalette.red, tPalette.green, tPalette.blue>
  [295] extcall 136 ............................. <rgb(tPalette.red, tPalette.green, tPalette.blue)>
  [297] pusharglistnoret 3 ...................... <tValue, "color", rgb(tPalette.red, tPalette.green, tPalette.blue)>
  [299] objcall 175 ............................. tValue["color"] = rgb(tPalette.red, tPalette.green, tPalette.blue)
  [301] jmp [444]
  [304] getlocal 7 .............................. <tColor>
  [306] pushsymb 354 ............................ <#item>
  [309] pusharglist 2 ........................... <tColor, #item>
  [311] objcall 172 ............................. <tColor.item.count>
  [313] pushint8 3 .............................. <3>
  [315] eq ...................................... <tColor.item.count = 3>
  [316] jmpifz [430] ............................ if tColor.item.count = 3 then / else
  [319] getlocal 6 .............................. <tValue>
  [321] pushcons 22 ............................. <"color">
  [323] pushcons 24 ............................. <"rgb(">
  [325] getlocal 7 .............................. <tColor>
  [327] joinstr ................................. <"rgb(" & tColor>
  [328] pushcons 25 ............................. <")">
  [330] joinstr ................................. <"rgb(" & tColor & ")">
  [331] pusharglist 1 ........................... <"rgb(" & tColor & ")">
  [333] extcall 156 ............................. <value("rgb(" & tColor & ")")>
  [335] pusharglistnoret 3 ...................... <tValue, "color", value("rgb(" & tColor & ")")>
  [337] objcall 175 ............................. tValue["color"] = value("rgb(" & tColor & ")")
  [339] getlocal 6 .............................. <tValue>
  [341] pushcons 22 ............................. <"color">
  [343] pusharglist 2 ........................... <tValue, "color">
  [345] objcall 173 ............................. <tValue["color"]>
  [347] pusharglist 1 ........................... <tValue["color"]>
  [349] extcall 194 ............................. <voidp(tValue["color"])>
  [351] jmpifz [368] ............................ if voidp(tValue["color"]) then
  [354] getlocal 6 .............................. <tValue>
  [356] pushcons 22 ............................. <"color">
  [358] pushcons 23 ............................. <"EEEEEE">
  [360] pusharglist 1 ........................... <"EEEEEE">
  [362] extcall 136 ............................. <rgb("EEEEEE")>
  [364] pusharglistnoret 3 ...................... <tValue, "color", rgb("EEEEEE")>
  [366] objcall 175 ............................. tValue["color"] = rgb("EEEEEE")
  [368] getlocal 6 .............................. <tValue>
  [370] pushcons 22 ............................. <"color">
  [372] pusharglist 2 ........................... <tValue, "color">
  [374] objcall 173 ............................. <tValue["color"]>
  [376] getobjprop 400 .......................... <tValue["color"].red>
  [379] getlocal 6 .............................. <tValue>
  [381] pushcons 22 ............................. <"color">
  [383] pusharglist 2 ........................... <tValue, "color">
  [385] objcall 173 ............................. <tValue["color"]>
  [387] getobjprop 401 .......................... <tValue["color"].green>
  [390] add ..................................... <tValue["color"].red + tValue["color"].green>
  [391] getlocal 6 .............................. <tValue>
  [393] pushcons 22 ............................. <"color">
  [395] pusharglist 2 ........................... <tValue, "color">
  [397] objcall 173 ............................. <tValue["color"]>
  [399] getobjprop 402 .......................... <tValue["color"].blue>
  [402] add ..................................... <tValue["color"].red + tValue["color"].green + tValue["color"].blue>
  [403] pushint16 238 ........................... <238>
  [406] pushint8 3 .............................. <3>
  [408] mul ..................................... <238 * 3>
  [409] gt ...................................... <(tValue["color"].red + tValue["color"].green + tValue["color"].blue) > (238 * 3)>
  [410] jmpifz [427] ............................ if (tValue["color"].red + tValue["color"].green + tValue["color"].blue) > (238 * 3) then
  [413] getlocal 6 .............................. <tValue>
  [415] pushcons 22 ............................. <"color">
  [417] pushcons 23 ............................. <"EEEEEE">
  [419] pusharglist 1 ........................... <"EEEEEE">
  [421] extcall 136 ............................. <rgb("EEEEEE")>
  [423] pusharglistnoret 3 ...................... <tValue, "color", rgb("EEEEEE")>
  [425] objcall 175 ............................. tValue["color"] = rgb("EEEEEE")
  [427] jmp [444]
  [430] getlocal 6 .............................. <tValue>
  [432] pushcons 22 ............................. <"color">
  [434] pushcons 23 ............................. <"EEEEEE">
  [436] pusharglist 1 ........................... <"EEEEEE">
  [438] extcall 136 ............................. <rgb("EEEEEE")>
  [440] pusharglistnoret 3 ...................... <tValue, "color", rgb("EEEEEE")>
  [442] objcall 175 ............................. tValue["color"] = rgb("EEEEEE")
  [444] getlocal 1 .............................. <tFigure>
  [446] getlocal 4 .............................. <tProp>
  [448] getlocal 6 .............................. <tValue>
  [450] pusharglistnoret 3 ...................... <tFigure, tProp, tValue>
  [452] objcall 175 ............................. tFigure[tProp] = tValue
  [454] pushcons 14 ............................. <"&">
  [456] setmovieprop 350 ........................ the itemDelimiter = "&"
  [459] pushint8 1
  [461] getlocal 2
  [463] add
  [464] setlocal 2
  [466] endrepeat [ 39]
  [469] getlocal 1 .............................. <tFigure>
  [471] pusharglistnoret 1 ...................... <tFigure>
  [473] extcall 189 ............................. return tFigure
  [475] ret
end

on parseNewTypeFigure me, tFigure, tsex
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tTempFigure = [:]
  [  5] pusharglist 0 ........................... <[:]>
  [  7] pushproplist ............................ <[:]>
  [  8] setlocal 1 .............................. tHiddenLayers = [:]
  [ 10] pushint8 1 .............................. <1>
  [ 12] setlocal 2
  [ 14] getlocal 2
  [ 16] getparam 1 .............................. <tFigure>
  [ 18] getobjprop 172 .......................... <tFigure.count>
  [ 20] lteq
  [ 21] jmpifz [300] ............................ repeat with f = 1 to tFigure.count
  [ 24] getparam 1 .............................. <tFigure>
  [ 26] getlocal 2 .............................. <f>
  [ 28] pusharglist 2 ........................... <tFigure, f>
  [ 30] objcall 293 ............................. <tFigure.getPropAt(f)>
  [ 33] setlocal 3 .............................. tSetID = tFigure.getPropAt(f)
  [ 35] getparam 1 .............................. <tFigure>
  [ 37] getlocal 3 .............................. <tSetID>
  [ 39] pusharglist 2 ........................... <tFigure, tSetID>
  [ 41] objcall 173 ............................. <tFigure[tSetID]>
  [ 43] setlocal 4 .............................. tColorId = tFigure[tSetID]
  [ 45] getlocal 4 .............................. <tColorId>
  [ 47] pusharglist 1 ........................... <tColorId>
  [ 49] extcall 194 ............................. <voidp(tColorId)>
  [ 51] jmpifz [ 58] ............................ if voidp(tColorId) then
  [ 54] pushint8 1 .............................. <1>
  [ 56] setlocal 4 .............................. tColorId = 1
  [ 58] getprop 689 ............................. <pFigureData>
  [ 61] getlocal 4 .............................. <tColorId>
  [ 63] pusharglist 2 ........................... <pFigureData, tColorId>
  [ 65] objcall 314 ............................. <pFigureData.getColor(tColorId)>
  [ 68] setlocal 5 .............................. tColor = pFigureData.getColor(tColorId)
  [ 70] getlocal 5 .............................. <tColor>
  [ 72] pushzero ................................ <0>
  [ 73] eq ...................................... <tColor = 0>
  [ 74] jmpifz [ 88] ............................ if tColor = 0 then / else
  [ 77] pushcons 26 ............................. <"#EEEEEE">
  [ 79] pusharglist 1 ........................... <"#EEEEEE">
  [ 81] extcall 136 ............................. <rgb("#EEEEEE")>
  [ 83] setlocal 5 .............................. tColor = rgb("#EEEEEE")
  [ 85] jmp [ 96]
  [ 88] getlocal 5 .............................. <tColor>
  [ 90] pusharglist 1 ........................... <tColor>
  [ 92] extcall 136 ............................. <rgb(tColor)>
  [ 94] setlocal 5 .............................. tColor = rgb(tColor)
  [ 96] getprop 689 ............................. <pFigureData>
  [ 99] getlocal 3 .............................. <tSetID>
  [101] pusharglist 2 ........................... <pFigureData, tSetID>
  [103] objcall 622 ............................. <pFigureData.getSetPartCount(tSetID)>
  [106] setlocal 6 .............................. tPartCount = pFigureData.getSetPartCount(tSetID)
  [108] pushint8 1 .............................. <1>
  [110] setlocal 7
  [112] getlocal 7
  [114] getlocal 6 .............................. <tPartCount>
  [116] lteq
  [117] jmpifz [244] ............................ repeat with i = 1 to tPartCount
  [120] getprop 689 ............................. <pFigureData>
  [123] getlocal 3 .............................. <tSetID>
  [125] getlocal 7 .............................. <i>
  [127] pusharglist 3 ........................... <pFigureData, tSetID, i>
  [129] objcall 623 ............................. <pFigureData.getSetPartData(tSetID, i)>
  [132] setlocal 8 .............................. tPartData = pFigureData.getSetPartData(tSetID, i)
  [134] getlocal 8 .............................. <tPartData>
  [136] pushzero ................................ <0>
  [137] nteq .................................... <tPartData <> 0>
  [138] jmpifz [235] ............................ if tPartData <> 0 then
  [141] getlocal 8 .............................. <tPartData>
  [143] pushcons 27 ............................. <"id">
  [145] pusharglist 2 ........................... <tPartData, "id">
  [147] objcall 173 ............................. <tPartData["id"]>
  [149] setlocal 9 .............................. tmodel = tPartData["id"]
  [151] getlocal 8 .............................. <tPartData>
  [153] pushcons 5 .............................. <"type">
  [155] pusharglist 2 ........................... <tPartData, "type">
  [157] objcall 173 ............................. <tPartData["type"]>
  [159] setlocal 10 ............................. tPart = tPartData["type"]
  [161] getlocal 8 .............................. <tPartData>
  [163] pushcons 28 ............................. <"colorable">
  [165] pusharglist 2 ........................... <tPartData, "colorable">
  [167] objcall 173 ............................. <tPartData["colorable"]>
  [169] jmpifz [203] ............................ if tPartData["colorable"] then
  [172] getlocal 0 .............................. <tTempFigure>
  [174] getlocal 10 ............................. <tPart>
  [176] pushcons 19 ............................. <"model">
  [178] getlocal 9 .............................. <tmodel>
  [180] pushcons 22 ............................. <"color">
  [182] getlocal 5 .............................. <tColor>
  [184] pushcons 29 ............................. <"setid">
  [186] getlocal 3 .............................. <tSetID>
  [188] pushcons 30 ............................. <"colorid">
  [190] getlocal 4 .............................. <tColorId>
  [192] pusharglist 8 ........................... <["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [194] pushproplist ............................ <["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [195] pusharglistnoret 3 ...................... <tTempFigure, tPart, ["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [197] objcall 398 ............................. tTempFigure.addProp(tPart, ["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId])
  [200] jmp [235] ............................... next repeat
  [203] getlocal 0 .............................. <tTempFigure>
  [205] getlocal 10 ............................. <tPart>
  [207] pushcons 19 ............................. <"model">
  [209] getlocal 9 .............................. <tmodel>
  [211] pushcons 22 ............................. <"color">
  [213] pushcons 26 ............................. <"#EEEEEE">
  [215] pusharglist 1 ........................... <"#EEEEEE">
  [217] extcall 136 ............................. <rgb("#EEEEEE")>
  [219] pushcons 29 ............................. <"setid">
  [221] getlocal 3 .............................. <tSetID>
  [223] pushcons 30 ............................. <"colorid">
  [225] getlocal 4 .............................. <tColorId>
  [227] pusharglist 8 ........................... <["model": tmodel, "color": rgb("#EEEEEE"), "setid": tSetID, "colorid": tColorId]>
  [229] pushproplist ............................ <["model": tmodel, "color": rgb("#EEEEEE"), "setid": tSetID, "colorid": tColorId]>
  [230] pusharglistnoret 3 ...................... <tTempFigure, tPart, ["model": tmodel, "color": rgb("#EEEEEE"), "setid": tSetID, "colorid": tColorId]>
  [232] objcall 398 ............................. tTempFigure.addProp(tPart, ["model": tmodel, "color": rgb("#EEEEEE"), "setid": tSetID, "colorid": tColorId])
  [235] pushint8 1
  [237] getlocal 7
  [239] add
  [240] setlocal 7
  [242] endrepeat [112]
  [244] getprop 689 ............................. <pFigureData>
  [247] getlocal 3 .............................. <tSetID>
  [249] pusharglist 2 ........................... <pFigureData, tSetID>
  [251] objcall 624 ............................. <pFigureData.getSetHiddenLayers(tSetID)>
  [254] setlocal 11 ............................. tHidden = pFigureData.getSetHiddenLayers(tSetID)
  [256] getprop 689 ............................. <pFigureData>
  [259] getlocal 3 .............................. <tSetID>
  [261] pusharglist 2 ........................... <pFigureData, tSetID>
  [263] objcall 621 ............................. <pFigureData.getSetType(tSetID)>
  [266] setlocal 12 ............................. tSetType = pFigureData.getSetType(tSetID)
  [268] getlocal 11 ............................. <tHidden>
  [270] pushzero ................................ <0>
  [271] nteq .................................... <tHidden <> 0>
  [272] getlocal 12 ............................. <tSetType>
  [274] pushzero ................................ <0>
  [275] nteq .................................... <tSetType <> 0>
  [276] and ..................................... <(tHidden <> 0) and (tSetType <> 0)>
  [277] jmpifz [290] ............................ if (tHidden <> 0) and (tSetType <> 0) then
  [280] getlocal 1 .............................. <tHiddenLayers>
  [282] getlocal 12 ............................. <tSetType>
  [284] getlocal 11 ............................. <tHidden>
  [286] pusharglistnoret 3 ...................... <tHiddenLayers, tSetType, tHidden>
  [288] objcall 175 ............................. tHiddenLayers[tSetType] = tHidden
  [290] pushint8 1
  [292] getlocal 2
  [294] add
  [295] setlocal 2
  [297] endrepeat [ 14]
  [300] getparam 0 .............................. <me>
  [302] getlocal 0 .............................. <tTempFigure>
  [304] getlocal 1 .............................. <tHiddenLayers>
  [306] pusharglist 3 ........................... <me, tTempFigure, tHiddenLayers>
  [308] objcall 676 ............................. <me.checkAndFixFigure(tTempFigure, tHiddenLayers)>
  [311] setlocal 0 .............................. tTempFigure = me.checkAndFixFigure(tTempFigure, tHiddenLayers)
  [313] getlocal 0 .............................. <tTempFigure>
  [315] pusharglistnoret 1 ...................... <tTempFigure>
  [317] extcall 189 ............................. return tTempFigure
  [319] ret
end

on checkDataLoaded me
  [  0] pushcons 31 ............................. <"partsets.xml.loaded">
  [  2] pushcons 32 ............................. <"draworder.xml.loaded">
  [  4] pushcons 33 ............................. <"animation.xml.loaded">
  [  6] pushcons 1 .............................. <"figure.xml.loaded">
  [  8] pusharglist 4 ........................... <["partsets.xml.loaded", "draworder.xml.loaded", "animation.xml.loaded", "figure.xml.loaded"]>
  [ 10] pushlist ................................ <["partsets.xml.loaded", "draworder.xml.loaded", "animation.xml.loaded", "figure.xml.loaded"]>
  [ 11] setlocal 0 .............................. tList = ["partsets.xml.loaded", "draworder.xml.loaded", "animation.xml.loaded", "figure.xml.loaded"]
  [ 13] getlocal 0 .............................. <tList>
  [ 15] peek 0
  [ 17] pusharglist 1
  [ 19] extcall 172
  [ 21] pushint8 1
  [ 23] peek 0
  [ 25] peek 2
  [ 27] lteq
  [ 28] jmpifz [ 78] ............................ repeat with tName in tList
  [ 31] peek 2
  [ 33] peek 1
  [ 35] pusharglist 2
  [ 37] extcall 173
  [ 39] setlocal 1
  [ 41] getlocal 1 .............................. <tName>
  [ 43] pusharglist 1 ........................... <tName>
  [ 45] extcall 174 ............................. <variableExists(tName)>
  [ 47] not ..................................... <not variableExists(tName)>
  [ 48] jmpifz [ 56] ............................ if not variableExists(tName) then
  [ 51] pushzero ................................ <0>
  [ 52] pusharglistnoret 1 ...................... <0>
  [ 54] extcall 189 ............................. return 0
  [ 56] getlocal 1 .............................. <tName>
  [ 58] pusharglist 1 ........................... <tName>
  [ 60] extcall 164 ............................. <getVariable(tName)>
  [ 62] pushint8 1 .............................. <1>
  [ 64] nteq .................................... <getVariable(tName) <> 1>
  [ 65] jmpifz [ 73] ............................ if getVariable(tName) <> 1 then
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 189 ............................. return 0
  [ 73] pushint8 1
  [ 75] add
  [ 76] endrepeat [ 23]
  [ 78] pop 3
  [ 80] pushcons 34 ............................. <EMPTY>
  [ 82] setlocal 2 .............................. tStamp = EMPTY
  [ 84] pushint8 1 .............................. <1>
  [ 86] setlocal 3
  [ 88] getlocal 3
  [ 90] pushint8 100 ............................ <100>
  [ 92] lteq
  [ 93] jmpifz [129] ............................ repeat with tNo = 1 to 100
  [ 96] pushint8 48 ............................. <48>
  [ 98] pusharglist 1 ........................... <48>
  [100] extcall 369 ............................. <random(48)>
  [103] pushint8 74 ............................. <74>
  [105] add ..................................... <random(48) + 74>
  [106] pusharglist 1 ........................... <random(48) + 74>
  [108] extcall 705 ............................. <numToChar(random(48) + 74)>
  [111] setlocal 4 .............................. tChar = numToChar(random(48) + 74)
  [113] getlocal 2 .............................. <tStamp>
  [115] getlocal 4 .............................. <tChar>
  [117] joinstr ................................. <tStamp & tChar>
  [118] setlocal 2 .............................. tStamp = tStamp & tChar
  [120] pushint8 1
  [122] getlocal 3
  [124] add
  [125] setlocal 3
  [127] endrepeat [ 88]
  [129] pusharglist 0 ........................... <>
  [131] extcall 706 ............................. <getSpecialServices()>
  [134] getlocal 2 .............................. <tStamp>
  [136] pusharglist 2 ........................... <getSpecialServices(), tStamp>
  [138] objcall 707 ............................. <getSpecialServices().getReceipt(tStamp)>
  [141] setlocal 5 .............................. tFuseReceipt = getSpecialServices().getReceipt(tStamp)
  [143] pusharglist 0 ........................... <[]>
  [145] pushlist ................................ <[]>
  [146] setlocal 6 .............................. tReceipt = []
  [148] pushint8 1 .............................. <1>
  [150] setlocal 7
  [152] getlocal 7
  [154] getlocal 2 .............................. <tStamp>
  [156] getobjprop 466 .......................... <tStamp.length>
  [159] lteq
  [160] jmpifz [217] ............................ repeat with tCharNo = 1 to tStamp.length
  [163] getlocal 2 .............................. <tStamp>
  [165] getlocal 7 .............................. <tCharNo>
  [167] getlocal 7 .............................. <tCharNo>
  [169] pusharglist 3 ........................... <tStamp, tCharNo, tCharNo>
  [171] extcall 708 ............................. <chars(tStamp, tCharNo, tCharNo)>
  [174] setlocal 4 .............................. tChar = chars(tStamp, tCharNo, tCharNo)
  [176] getlocal 4 .............................. <tChar>
  [178] pusharglist 1 ........................... <tChar>
  [180] extcall 709 ............................. <charToNum(tChar)>
  [183] setlocal 4 .............................. tChar = charToNum(tChar)
  [185] getlocal 4 .............................. <tChar>
  [187] getlocal 7 .............................. <tCharNo>
  [189] mul ..................................... <tChar * tCharNo>
  [190] pushint32 309203 ........................ <309203>
  [195] add ..................................... <(tChar * tCharNo) + 309203>
  [196] setlocal 4 .............................. tChar = (tChar * tCharNo) + 309203
  [198] getlocal 6 .............................. <tReceipt>
  [200] getlocal 7 .............................. <tCharNo>
  [202] getlocal 4 .............................. <tChar>
  [204] pusharglistnoret 3 ...................... <tReceipt, tCharNo, tChar>
  [206] objcall 175 ............................. tReceipt[tCharNo] = tChar
  [208] pushint8 1
  [210] getlocal 7
  [212] add
  [213] setlocal 7
  [215] endrepeat [152]
  [217] getlocal 6 .............................. <tReceipt>
  [219] getlocal 5 .............................. <tFuseReceipt>
  [221] nteq .................................... <tReceipt <> tFuseReceipt>
  [222] jmpifz [244] ............................ if tReceipt <> tFuseReceipt then
  [225] getparam 0 .............................. <me>
  [227] pushcons 35 ............................. <"Invalid build structure">
  [229] pushsymb 673 ............................ <#checkDataLoaded>
  [232] pushsymb 710 ............................ <#critical>
  [235] pusharglistnoret 4 ...................... <me, "Invalid build structure", #checkDataLoaded, #critical>
  [237] extcall 176 ............................. error(me, "Invalid build structure", #checkDataLoaded, #critical)
  [239] pushzero ................................ <0>
  [240] pusharglistnoret 1 ...................... <0>
  [242] extcall 189 ............................. return 0
  [244] pushcons 0 .............................. <"figurepartlist.loaded">
  [246] pushint8 1 .............................. <1>
  [248] pusharglistnoret 2 ...................... <"figurepartlist.loaded", 1>
  [250] extcall 688 ............................. setVariable("figurepartlist.loaded", 1)
  [253] pushint8 1 .............................. <1>
  [255] pusharglistnoret 1 ...................... <1>
  [257] extcall 189 ............................. return 1
  [259] ret
end

on loadFigurePartList me, tURL
  [  0] getparam 1 .............................. <tURL>
  [  2] setlocal 0 .............................. tMem = tURL
  [  4] pushzero ................................ <0>
  [  5] setlocal 1 .............................. tMemberCount = 0
  [  7] pushcons 36 ............................. <"hh_human_shirt">
  [  9] pushcons 37 ............................. <"hh_human_leg">
  [ 11] pushcons 38 ............................. <"hh_human_shoe">
  [ 13] pushcons 39 ............................. <"hh_human_body">
  [ 15] pushcons 40 ............................. <"hh_human_face">
  [ 17] pushcons 41 ............................. <"hh_human_hats">
  [ 19] pushcons 42 ............................. <"hh_human_hair">
  [ 21] pusharglist 7 ........................... <["hh_human_shirt", "hh_human_leg", "hh_human_shoe", "hh_human_body", "hh_human_face", "hh_human_hats", "hh_human_hair"]>
  [ 23] pushlist ................................ <["hh_human_shirt", "hh_human_leg", "hh_human_shoe", "hh_human_body", "hh_human_face", "hh_human_hats", "hh_human_hair"]>
  [ 24] setlocal 2 .............................. tCastList = ["hh_human_shirt", "hh_human_leg", "hh_human_shoe", "hh_human_body", "hh_human_face", "hh_human_hats", "hh_human_hair"]
  [ 26] getlocal 2 .............................. <tCastList>
  [ 28] peek 0
  [ 30] pusharglist 1
  [ 32] extcall 172
  [ 34] pushint8 1
  [ 36] peek 0
  [ 38] peek 2
  [ 40] lteq
  [ 41] jmpifz [ 86] ............................ repeat with tCastName in tCastList
  [ 44] peek 2
  [ 46] peek 1
  [ 48] pusharglist 2
  [ 50] extcall 173
  [ 52] setlocal 3
  [ 54] getlocal 3 .............................. <tCastName>
  [ 56] pusharglist 1 ........................... <tCastName>
  [ 58] extcall 716 ............................. <castLib(tCastName)>
  [ 61] setlocal 4 .............................. tCastLib = castLib(tCastName)
  [ 63] getlocal 4 .............................. <tCastLib>
  [ 65] pushzero ................................ <0>
  [ 66] nteq .................................... <tCastLib <> 0>
  [ 67] jmpifz [ 81] ............................ if tCastLib <> 0 then
  [ 70] getlocal 1 .............................. <tMemberCount>
  [ 72] getlocal 3 .............................. <tCastName>
  [ 74] pushint8 2 .............................. <2>
  [ 76] get 8 ................................... <the number of castMembers of castLib tCastName>
  [ 78] add ..................................... <tMemberCount + the number of castMembers of castLib tCastName>
  [ 79] setlocal 1 .............................. tMemberCount = tMemberCount + the number of castMembers of castLib tCastName
  [ 81] pushint8 1
  [ 83] add
  [ 84] endrepeat [ 36]
  [ 86] pop 3
  [ 88] pushcons 43 ............................. <"?">
  [ 90] setlocal 5 .............................. tSeparator = "?"
  [ 92] getparam 1 .............................. <tURL>
  [ 94] pushcons 43 ............................. <"?">
  [ 96] containsstr ............................. <tURL contains "?">
  [ 97] jmpifz [104] ............................ if tURL contains "?" then
  [100] pushcons 14 ............................. <"&">
  [102] setlocal 5 .............................. tSeparator = "&"
  [104] getmovieprop 717 ........................ <the moviePath>
  [107] pushcons 44 ............................. <"http://">
  [109] containsstr ............................. <the moviePath contains "http://">
  [110] jmpifz [129] ............................ if the moviePath contains "http://" then / else
  [113] getparam 1 .............................. <tURL>
  [115] getlocal 5 .............................. <tSeparator>
  [117] joinstr ................................. <tURL & tSeparator>
  [118] pushcons 45 ............................. <"graphcount=">
  [120] joinstr ................................. <tURL & tSeparator & "graphcount=">
  [121] getlocal 1 .............................. <tMemberCount>
  [123] joinstr ................................. <tURL & tSeparator & "graphcount=" & tMemberCount>
  [124] setparam 1 .............................. tURL = tURL & tSeparator & "graphcount=" & tMemberCount
  [126] jmp [150]
  [129] getparam 1 .............................. <tURL>
  [131] pushcons 44 ............................. <"http://">
  [133] containsstr ............................. <tURL contains "http://">
  [134] jmpifz [150] ............................ if tURL contains "http://" then
  [137] getparam 1 .............................. <tURL>
  [139] getlocal 5 .............................. <tSeparator>
  [141] joinstr ................................. <tURL & tSeparator>
  [142] pushcons 45 ............................. <"graphcount=">
  [144] joinstr ................................. <tURL & tSeparator & "graphcount=">
  [145] getlocal 1 .............................. <tMemberCount>
  [147] joinstr ................................. <tURL & tSeparator & "graphcount=" & tMemberCount>
  [148] setparam 1 .............................. tURL = tURL & tSeparator & "graphcount=" & tMemberCount
  [150] getparam 1 .............................. <tURL>
  [152] getlocal 0 .............................. <tMem>
  [154] pushsymb 719 ............................ <#field>
  [157] pushint8 1 .............................. <1>
  [159] pusharglist 4 ........................... <tURL, tMem, #field, 1>
  [161] extcall 718 ............................. <queueDownload(tURL, tMem, #field, 1)>
  [164] setlocal 6 .............................. tmember = queueDownload(tURL, tMem, #field, 1)
  [166] getlocal 6 .............................. <tmember>
  [168] pushsymb 675 ............................ <#partListLoaded>
  [171] getparam 0 .............................. <me>
  [173] pusharglist 1 ........................... <me>
  [175] objcall 207 ............................. <me.getID()>
  [177] pusharglist 3 ........................... <tmember, #partListLoaded, me.getID()>
  [179] extcall 720 ............................. <registerDownloadCallback(tmember, #partListLoaded, me.getID())>
  [182] pusharglistnoret 1 ...................... <registerDownloadCallback(tmember, #partListLoaded, me.getID())>
  [184] extcall 189 ............................. return registerDownloadCallback(tmember, #partListLoaded, me.getID())
  [186] ret
end

on partListLoaded me, tParams, tSuccess
  [  0] getparam 2 .............................. <tSuccess>
  [  2] not ..................................... <not tSuccess>
  [  3] jmpifz [ 36] ............................ if not tSuccess then
  [  6] pushcons 46 ............................. <"error">
  [  8] pushcons 47 ............................. <"part_list">
  [ 10] pusharglist 2 ........................... <["error": "part_list"]>
  [ 12] pushproplist ............................ <["error": "part_list"]>
  [ 13] pusharglistnoret 1 ...................... <["error": "part_list"]>
  [ 15] extcall 727 ............................. fatalError(["error": "part_list"])
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 48 ............................. <"Failure while loading part list">
  [ 22] pushsymb 675 ............................ <#partListLoaded>
  [ 25] pushsymb 710 ............................ <#critical>
  [ 28] pusharglist 4 ........................... <me, "Failure while loading part list", #partListLoaded, #critical>
  [ 30] extcall 176 ............................. <error(me, "Failure while loading part list", #partListLoaded, #critical)>
  [ 32] pusharglistnoret 1 ...................... <error(me, "Failure while loading part list", #partListLoaded, #critical)>
  [ 34] extcall 189 ............................. return error(me, "Failure while loading part list", #partListLoaded, #critical)
  [ 36] pushcons 4 .............................. <"external.figurepartlist.txt">
  [ 38] pusharglist 1 ........................... <"external.figurepartlist.txt">
  [ 40] extcall 164 ............................. <getVariable("external.figurepartlist.txt")>
  [ 42] setlocal 0 .............................. tMemName = getVariable("external.figurepartlist.txt")
  [ 44] getlocal 0 .............................. <tMemName>
  [ 46] pushzero ................................ <0>
  [ 47] eq ...................................... <tMemName = 0>
  [ 48] jmpifz [ 55] ............................ if tMemName = 0 then
  [ 51] pushcons 34 ............................. <EMPTY>
  [ 53] setlocal 0 .............................. tMemName = EMPTY
  [ 55] getprop 690 ............................. <pDontProfile>
  [ 58] not ..................................... <not pDontProfile>
  [ 59] jmpifz [ 69] ............................ if not pDontProfile then
  [ 62] pushcons 49 ............................. <"Figure System::partListLoaded">
  [ 64] pusharglistnoret 1 ...................... <"Figure System::partListLoaded">
  [ 66] extcall 728 ............................. startProfilingTask("Figure System::partListLoaded")
  [ 69] getlocal 0 .............................. <tMemName>
  [ 71] pusharglist 1 ........................... <tMemName>
  [ 73] extcall 201 ............................. <memberExists(tMemName)>
  [ 75] not ..................................... <not memberExists(tMemName)>
  [ 76] jmpifz [101] ............................ if not memberExists(tMemName) then / else
  [ 79] pusharglist 0 ........................... <>
  [ 81] extcall 101 ............................. <VOID>
  [ 83] setlocal 1 .............................. tValidpartList = VOID
  [ 85] getparam 0 .............................. <me>
  [ 87] pushcons 48 ............................. <"Failure while loading part list">
  [ 89] pushsymb 675 ............................ <#partListLoaded>
  [ 92] pushsymb 177 ............................ <#major>
  [ 94] pusharglistnoret 4 ...................... <me, "Failure while loading part list", #partListLoaded, #major>
  [ 96] extcall 176 ............................. error(me, "Failure while loading part list", #partListLoaded, #major)
  [ 98] jmp [148]
  [101] getlocal 0 .............................. <tMemName>
  [103] pusharglist 1 ........................... <tMemName>
  [105] extcall 215 ............................. <getmemnum(tMemName)>
  [107] pusharglist 1 ........................... <getmemnum(tMemName)>
  [109] extcall 142 ............................. <member(getmemnum(tMemName))>
  [111] getobjprop 349 .......................... <member(getmemnum(tMemName)).text>
  [114] setlocal 2 .............................. tContent = member(getmemnum(tMemName)).text
  [116] getprop 689 ............................. <pFigureData>
  [119] getlocal 2 .............................. <tContent>
  [121] pusharglist 2 ........................... <pFigureData, tContent>
  [123] objcall 616 ............................. <pFigureData.parseData(tContent)>
  [126] not ..................................... <not pFigureData.parseData(tContent)>
  [127] jmpifz [148] ............................ if not pFigureData.parseData(tContent) then
  [130] getparam 0 .............................. <me>
  [132] pushcons 50 ............................. <"Failure while parsing part list">
  [134] pushsymb 675 ............................ <#partListLoaded>
  [137] pushsymb 710 ............................ <#critical>
  [140] pusharglist 4 ........................... <me, "Failure while parsing part list", #partListLoaded, #critical>
  [142] extcall 176 ............................. <error(me, "Failure while parsing part list", #partListLoaded, #critical)>
  [144] pusharglistnoret 1 ...................... <error(me, "Failure while parsing part list", #partListLoaded, #critical)>
  [146] extcall 189 ............................. return error(me, "Failure while parsing part list", #partListLoaded, #critical)
  [148] pushint8 1 .............................. <1>
  [150] setprop 686 ............................. pFigurePartListLoadedFlag = 1
  [153] pushcons 1 .............................. <"figure.xml.loaded">
  [155] pushint8 1 .............................. <1>
  [157] pusharglistnoret 2 ...................... <"figure.xml.loaded", 1>
  [159] extcall 688 ............................. setVariable("figure.xml.loaded", 1)
  [162] getparam 0 .............................. <me>
  [164] pusharglistnoret 1 ...................... <me>
  [166] objcall 673 ............................. me.checkDataLoaded()
  [169] getlocal 0 .............................. <tMemName>
  [171] pusharglist 1 ........................... <tMemName>
  [173] extcall 201 ............................. <memberExists(tMemName)>
  [175] jmpifz [184] ............................ if memberExists(tMemName) then
  [178] getlocal 0 .............................. <tMemName>
  [180] pusharglistnoret 1 ...................... <tMemName>
  [182] extcall 202 ............................. removeMember(tMemName)
  [184] getprop 690 ............................. <pDontProfile>
  [187] not ..................................... <not pDontProfile>
  [188] jmpifz [198] ............................ if not pDontProfile then
  [191] pushcons 49 ............................. <"Figure System::partListLoaded">
  [193] pusharglistnoret 1 ...................... <"Figure System::partListLoaded">
  [195] extcall 729 ............................. finishProfilingTask("Figure System::partListLoaded")
  [198] ret
end

on checkAndFixFigure me, tFigure, tHiddenLayers
  [  0] getparam 1 .............................. <tFigure>
  [  2] getobjprop 180 .......................... <tFigure.ilk>
  [  4] pushsymb 183 ............................ <#propList>
  [  6] nteq .................................... <tFigure.ilk <> #propList>
  [  7] jmpifz [ 15] ............................ if tFigure.ilk <> #propList then
  [ 10] pusharglist 0 ........................... <[:]>
  [ 12] pushproplist ............................ <[:]>
  [ 13] setparam 1 .............................. tFigure = [:]
  [ 15] getparam 1 .............................. <tFigure>
  [ 17] pusharglist 1 ........................... <tFigure>
  [ 19] objcall 220 ............................. <tFigure.duplicate()>
  [ 21] setparam 1 .............................. tFigure = tFigure.duplicate()
  [ 23] getparam 2 .............................. <tHiddenLayers>
  [ 25] getobjprop 180 .......................... <tHiddenLayers.ilk>
  [ 27] pushsymb 183 ............................ <#propList>
  [ 29] nteq .................................... <tHiddenLayers.ilk <> #propList>
  [ 30] jmpifz [ 38] ............................ if tHiddenLayers.ilk <> #propList then
  [ 33] pusharglist 0 ........................... <[:]>
  [ 35] pushproplist ............................ <[:]>
  [ 36] setparam 2 .............................. tHiddenLayers = [:]
  [ 38] pushcons 51 ............................. <"human.parts.h">
  [ 40] pusharglist 1 ........................... <"human.parts.h">
  [ 42] extcall 178 ............................. <getVariableValue("human.parts.h")>
  [ 44] setlocal 0 .............................. tPartDefinition = getVariableValue("human.parts.h")
  [ 46] getlocal 0 .............................. <tPartDefinition>
  [ 48] pushzero ................................ <0>
  [ 49] eq ...................................... <tPartDefinition = 0>
  [ 50] jmpifz [ 58] ............................ if tPartDefinition = 0 then
  [ 53] pusharglist 0 ........................... <[]>
  [ 55] pushlist ................................ <[]>
  [ 56] setlocal 0 .............................. tPartDefinition = []
  [ 58] pusharglist 0 ........................... <[:]>
  [ 60] pushproplist ............................ <[:]>
  [ 61] setlocal 1 .............................. tHiddenLayersOrdered = [:]
  [ 63] getlocal 0 .............................. <tPartDefinition>
  [ 65] getobjprop 172 .......................... <tPartDefinition.count>
  [ 67] setlocal 2
  [ 69] getlocal 2
  [ 71] pushint8 1 .............................. <1>
  [ 73] gteq
  [ 74] jmpifz [129] ............................ repeat with i = tPartDefinition.count down to 1
  [ 77] getlocal 0 .............................. <tPartDefinition>
  [ 79] getlocal 2 .............................. <i>
  [ 81] pusharglist 2 ........................... <tPartDefinition, i>
  [ 83] objcall 173 ............................. <tPartDefinition[i]>
  [ 85] setlocal 3 .............................. tPartSymbol = tPartDefinition[i]
  [ 87] getparam 2 .............................. <tHiddenLayers>
  [ 89] getlocal 3 .............................. <tPartSymbol>
  [ 91] pusharglist 2 ........................... <tHiddenLayers, tPartSymbol>
  [ 93] objcall 173 ............................. <tHiddenLayers[tPartSymbol]>
  [ 95] pusharglist 1 ........................... <tHiddenLayers[tPartSymbol]>
  [ 97] extcall 194 ............................. <voidp(tHiddenLayers[tPartSymbol])>
  [ 99] not ..................................... <not voidp(tHiddenLayers[tPartSymbol])>
  [100] jmpifz [120] ............................ if not voidp(tHiddenLayers[tPartSymbol]) then
  [103] getlocal 1 .............................. <tHiddenLayersOrdered>
  [105] getlocal 3 .............................. <tPartSymbol>
  [107] getparam 2 .............................. <tHiddenLayers>
  [109] getlocal 3 .............................. <tPartSymbol>
  [111] pusharglist 2 ........................... <tHiddenLayers, tPartSymbol>
  [113] objcall 173 ............................. <tHiddenLayers[tPartSymbol]>
  [115] pusharglistnoret 3 ...................... <tHiddenLayersOrdered, tPartSymbol, tHiddenLayers[tPartSymbol]>
  [117] objcall 398 ............................. tHiddenLayersOrdered.addProp(tPartSymbol, tHiddenLayers[tPartSymbol])
  [120] pushint8 -1
  [122] getlocal 2
  [124] add
  [125] setlocal 2
  [127] endrepeat [ 69]
  [129] pushint8 1 .............................. <1>
  [131] setlocal 2
  [133] getlocal 2
  [135] getlocal 1 .............................. <tHiddenLayersOrdered>
  [137] getobjprop 172 .......................... <tHiddenLayersOrdered.count>
  [139] lteq
  [140] jmpifz [246] ............................ repeat with i = 1 to tHiddenLayersOrdered.count
  [143] getlocal 1 .............................. <tHiddenLayersOrdered>
  [145] getlocal 2 .............................. <i>
  [147] pusharglist 2 ........................... <tHiddenLayersOrdered, i>
  [149] objcall 173 ............................. <tHiddenLayersOrdered[i]>
  [151] setlocal 4 .............................. tRemoveList = tHiddenLayersOrdered[i]
  [153] getlocal 4 .............................. <tRemoveList>
  [155] peek 0
  [157] pusharglist 1
  [159] extcall 172
  [161] pushint8 1
  [163] peek 0
  [165] peek 2
  [167] lteq
  [168] jmpifz [235] ............................ repeat with tPart in tRemoveList
  [171] peek 2
  [173] peek 1
  [175] pusharglist 2
  [177] extcall 173
  [179] setlocal 5
  [181] getparam 1 .............................. <tFigure>
  [183] getlocal 5 .............................. <tPart>
  [185] pusharglist 2 ........................... <tFigure, tPart>
  [187] objcall 290 ............................. <tFigure.findPos(tPart)>
  [190] pushzero ................................ <0>
  [191] gt ...................................... <tFigure.findPos(tPart) > 0>
  [192] jmpifz [206] ............................ repeat while tFigure.findPos(tPart) > 0
  [195] getparam 1 .............................. <tFigure>
  [197] getlocal 5 .............................. <tPart>
  [199] pusharglistnoret 2 ...................... <tFigure, tPart>
  [201] objcall 733 ............................. tFigure.deleteProp(tPart)
  [204] endrepeat [181]
  [206] getlocal 1 .............................. <tHiddenLayersOrdered>
  [208] getlocal 5 .............................. <tPart>
  [210] pusharglist 2 ........................... <tHiddenLayersOrdered, tPart>
  [212] objcall 290 ............................. <tHiddenLayersOrdered.findPos(tPart)>
  [215] getlocal 2 .............................. <i>
  [217] gt ...................................... <tHiddenLayersOrdered.findPos(tPart) > i>
  [218] jmpifz [230] ............................ if tHiddenLayersOrdered.findPos(tPart) > i then
  [221] getlocal 1 .............................. <tHiddenLayersOrdered>
  [223] getlocal 5 .............................. <tPart>
  [225] pusharglistnoret 2 ...................... <tHiddenLayersOrdered, tPart>
  [227] objcall 733 ............................. tHiddenLayersOrdered.deleteProp(tPart)
  [230] pushint8 1
  [232] add
  [233] endrepeat [163]
  [235] pop 3
  [237] pushint8 1
  [239] getlocal 2
  [241] add
  [242] setlocal 2
  [244] endrepeat [133]
  [246] pushcons 52 ............................. <"human.parts.removeList">
  [248] pusharglist 1 ........................... <"human.parts.removeList">
  [250] extcall 164 ............................. <getVariable("human.parts.removeList")>
  [252] setlocal 4 .............................. tRemoveList = getVariable("human.parts.removeList")
  [254] getlocal 4 .............................. <tRemoveList>
  [256] pusharglist 1 ........................... <tRemoveList>
  [258] extcall 180 ............................. <ilk(tRemoveList)>
  [260] pushsymb 183 ............................ <#propList>
  [262] nteq .................................... <ilk(tRemoveList) <> #propList>
  [263] jmpifz [271] ............................ if ilk(tRemoveList) <> #propList then
  [266] pusharglist 0 ........................... <[:]>
  [268] pushproplist ............................ <[:]>
  [269] setlocal 4 .............................. tRemoveList = [:]
  [271] pushint8 1 .............................. <1>
  [273] setlocal 2
  [275] getlocal 2
  [277] getlocal 4 .............................. <tRemoveList>
  [279] getobjprop 172 .......................... <tRemoveList.count>
  [281] lteq
  [282] jmpifz [338] ............................ repeat with i = 1 to tRemoveList.count
  [285] getlocal 4 .............................. <tRemoveList>
  [287] getlocal 2 .............................. <i>
  [289] pusharglist 2 ........................... <tRemoveList, i>
  [291] objcall 293 ............................. <tRemoveList.getPropAt(i)>
  [294] setlocal 5 .............................. tPart = tRemoveList.getPropAt(i)
  [296] getparam 1 .............................. <tFigure>
  [298] getlocal 5 .............................. <tPart>
  [300] pusharglist 2 ........................... <tFigure, tPart>
  [302] objcall 290 ............................. <tFigure.findPos(tPart)>
  [305] pushzero ................................ <0>
  [306] gt ...................................... <tFigure.findPos(tPart) > 0>
  [307] jmpifz [329] ............................ if tFigure.findPos(tPart) > 0 then
  [310] getlocal 4 .............................. <tRemoveList>
  [312] getlocal 2 .............................. <i>
  [314] pusharglist 2 ........................... <tRemoveList, i>
  [316] objcall 173 ............................. <tRemoveList[i]>
  [318] setlocal 6 .............................. tRemovePart = tRemoveList[i]
  [320] getparam 1 .............................. <tFigure>
  [322] getlocal 6 .............................. <tRemovePart>
  [324] pusharglistnoret 2 ...................... <tFigure, tRemovePart>
  [326] objcall 733 ............................. tFigure.deleteProp(tRemovePart)
  [329] pushint8 1
  [331] getlocal 2
  [333] add
  [334] setlocal 2
  [336] endrepeat [275]
  [338] getparam 1 .............................. <tFigure>
  [340] pusharglistnoret 1 ...................... <tFigure>
  [342] extcall 189 ............................. return tFigure
  [344] ret
end

on loadPartSetXML me
  [  0] pushcons 31 ............................. <"partsets.xml.loaded">
  [  2] pusharglist 1 ........................... <"partsets.xml.loaded">
  [  4] extcall 174 ............................. <variableExists("partsets.xml.loaded")>
  [  6] jmpifz [ 27] ............................ if variableExists("partsets.xml.loaded") then
  [  9] pushcons 31 ............................. <"partsets.xml.loaded">
  [ 11] pusharglist 1 ........................... <"partsets.xml.loaded">
  [ 13] extcall 164 ............................. <getVariable("partsets.xml.loaded")>
  [ 15] pushint8 1 .............................. <1>
  [ 17] eq ...................................... <getVariable("partsets.xml.loaded") = 1>
  [ 18] jmpifz [ 27] ............................ if getVariable("partsets.xml.loaded") = 1 then
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 189 ............................. return 1
  [ 27] pushcons 53 ............................. <"figure.partsets.xml">
  [ 29] pusharglist 1 ........................... <"figure.partsets.xml">
  [ 31] extcall 164 ............................. <getVariable("figure.partsets.xml")>
  [ 33] setlocal 0 .............................. tURL = getVariable("figure.partsets.xml")
  [ 35] getlocal 0 .............................. <tURL>
  [ 37] pushzero ................................ <0>
  [ 38] eq ...................................... <tURL = 0>
  [ 39] jmpifz [ 60] ............................ if tURL = 0 then
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 54 ............................. <"Can't load partset XML - no URL configured">
  [ 46] pushsymb 677 ............................ <#loadPartSetXML>
  [ 49] pushsymb 710 ............................ <#critical>
  [ 52] pusharglist 4 ........................... <me, "Can't load partset XML - no URL configured", #loadPartSetXML, #critical>
  [ 54] extcall 176 ............................. <error(me, "Can't load partset XML - no URL configured", #loadPartSetXML, #critical)>
  [ 56] pusharglistnoret 1 ...................... <error(me, "Can't load partset XML - no URL configured", #loadPartSetXML, #critical)>
  [ 58] extcall 189 ............................. return error(me, "Can't load partset XML - no URL configured", #loadPartSetXML, #critical)
  [ 60] getlocal 0 .............................. <tURL>
  [ 62] setlocal 1 .............................. tMem = tURL
  [ 64] getlocal 0 .............................. <tURL>
  [ 66] getlocal 1 .............................. <tMem>
  [ 68] pushsymb 719 ............................ <#field>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 4 ........................... <tURL, tMem, #field, 1>
  [ 75] extcall 718 ............................. <queueDownload(tURL, tMem, #field, 1)>
  [ 78] setlocal 2 .............................. tmember = queueDownload(tURL, tMem, #field, 1)
  [ 80] getlocal 2 .............................. <tmember>
  [ 82] pushsymb 680 ............................ <#partSetLoaded>
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglist 1 ........................... <me>
  [ 89] objcall 207 ............................. <me.getID()>
  [ 91] pusharglist 3 ........................... <tmember, #partSetLoaded, me.getID()>
  [ 93] extcall 720 ............................. <registerDownloadCallback(tmember, #partSetLoaded, me.getID())>
  [ 96] pusharglistnoret 1 ...................... <registerDownloadCallback(tmember, #partSetLoaded, me.getID())>
  [ 98] extcall 189 ............................. return registerDownloadCallback(tmember, #partSetLoaded, me.getID())
  [100] ret
end

on loadActionSetXML me
  [  0] pushcons 32 ............................. <"draworder.xml.loaded">
  [  2] pusharglist 1 ........................... <"draworder.xml.loaded">
  [  4] extcall 174 ............................. <variableExists("draworder.xml.loaded")>
  [  6] jmpifz [ 27] ............................ if variableExists("draworder.xml.loaded") then
  [  9] pushcons 32 ............................. <"draworder.xml.loaded">
  [ 11] pusharglist 1 ........................... <"draworder.xml.loaded">
  [ 13] extcall 164 ............................. <getVariable("draworder.xml.loaded")>
  [ 15] pushint8 1 .............................. <1>
  [ 17] eq ...................................... <getVariable("draworder.xml.loaded") = 1>
  [ 18] jmpifz [ 27] ............................ if getVariable("draworder.xml.loaded") = 1 then
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 189 ............................. return 1
  [ 27] pushcons 55 ............................. <"figure.draworder.xml">
  [ 29] pusharglist 1 ........................... <"figure.draworder.xml">
  [ 31] extcall 164 ............................. <getVariable("figure.draworder.xml")>
  [ 33] setlocal 0 .............................. tURL = getVariable("figure.draworder.xml")
  [ 35] getlocal 0 .............................. <tURL>
  [ 37] pushzero ................................ <0>
  [ 38] eq ...................................... <tURL = 0>
  [ 39] jmpifz [ 60] ............................ if tURL = 0 then
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 56 ............................. <"Can't load action set XML - no URL configured">
  [ 46] pushsymb 678 ............................ <#loadActionSetXML>
  [ 49] pushsymb 710 ............................ <#critical>
  [ 52] pusharglist 4 ........................... <me, "Can't load action set XML - no URL configured", #loadActionSetXML, #critical>
  [ 54] extcall 176 ............................. <error(me, "Can't load action set XML - no URL configured", #loadActionSetXML, #critical)>
  [ 56] pusharglistnoret 1 ...................... <error(me, "Can't load action set XML - no URL configured", #loadActionSetXML, #critical)>
  [ 58] extcall 189 ............................. return error(me, "Can't load action set XML - no URL configured", #loadActionSetXML, #critical)
  [ 60] getlocal 0 .............................. <tURL>
  [ 62] setlocal 1 .............................. tMem = tURL
  [ 64] getlocal 0 .............................. <tURL>
  [ 66] getlocal 1 .............................. <tMem>
  [ 68] pushsymb 719 ............................ <#field>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 4 ........................... <tURL, tMem, #field, 1>
  [ 75] extcall 718 ............................. <queueDownload(tURL, tMem, #field, 1)>
  [ 78] setlocal 2 .............................. tmember = queueDownload(tURL, tMem, #field, 1)
  [ 80] getlocal 2 .............................. <tmember>
  [ 82] pushsymb 681 ............................ <#actionSetLoaded>
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglist 1 ........................... <me>
  [ 89] objcall 207 ............................. <me.getID()>
  [ 91] pusharglist 3 ........................... <tmember, #actionSetLoaded, me.getID()>
  [ 93] extcall 720 ............................. <registerDownloadCallback(tmember, #actionSetLoaded, me.getID())>
  [ 96] pusharglistnoret 1 ...................... <registerDownloadCallback(tmember, #actionSetLoaded, me.getID())>
  [ 98] extcall 189 ............................. return registerDownloadCallback(tmember, #actionSetLoaded, me.getID())
  [100] ret
end

on loadAnimationSetXML me
  [  0] pushcons 33 ............................. <"animation.xml.loaded">
  [  2] pusharglist 1 ........................... <"animation.xml.loaded">
  [  4] extcall 174 ............................. <variableExists("animation.xml.loaded")>
  [  6] jmpifz [ 27] ............................ if variableExists("animation.xml.loaded") then
  [  9] pushcons 33 ............................. <"animation.xml.loaded">
  [ 11] pusharglist 1 ........................... <"animation.xml.loaded">
  [ 13] extcall 164 ............................. <getVariable("animation.xml.loaded")>
  [ 15] pushint8 1 .............................. <1>
  [ 17] eq ...................................... <getVariable("animation.xml.loaded") = 1>
  [ 18] jmpifz [ 27] ............................ if getVariable("animation.xml.loaded") = 1 then
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 189 ............................. return 1
  [ 27] pushcons 57 ............................. <"figure.animation.xml">
  [ 29] pusharglist 1 ........................... <"figure.animation.xml">
  [ 31] extcall 164 ............................. <getVariable("figure.animation.xml")>
  [ 33] setlocal 0 .............................. tURL = getVariable("figure.animation.xml")
  [ 35] getlocal 0 .............................. <tURL>
  [ 37] pushzero ................................ <0>
  [ 38] eq ...................................... <tURL = 0>
  [ 39] jmpifz [ 60] ............................ if tURL = 0 then
  [ 42] getparam 0 .............................. <me>
  [ 44] pushcons 58 ............................. <"Can't load animation XML - no URL configured">
  [ 46] pushsymb 679 ............................ <#loadAnimationSetXML>
  [ 49] pushsymb 710 ............................ <#critical>
  [ 52] pusharglist 4 ........................... <me, "Can't load animation XML - no URL configured", #loadAnimationSetXML, #critical>
  [ 54] extcall 176 ............................. <error(me, "Can't load animation XML - no URL configured", #loadAnimationSetXML, #critical)>
  [ 56] pusharglistnoret 1 ...................... <error(me, "Can't load animation XML - no URL configured", #loadAnimationSetXML, #critical)>
  [ 58] extcall 189 ............................. return error(me, "Can't load animation XML - no URL configured", #loadAnimationSetXML, #critical)
  [ 60] getlocal 0 .............................. <tURL>
  [ 62] setlocal 1 .............................. tMem = tURL
  [ 64] getlocal 0 .............................. <tURL>
  [ 66] getlocal 1 .............................. <tMem>
  [ 68] pushsymb 719 ............................ <#field>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 4 ........................... <tURL, tMem, #field, 1>
  [ 75] extcall 718 ............................. <queueDownload(tURL, tMem, #field, 1)>
  [ 78] setlocal 2 .............................. tmember = queueDownload(tURL, tMem, #field, 1)
  [ 80] getlocal 2 .............................. <tmember>
  [ 82] pushsymb 682 ............................ <#animationSetLoaded>
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglist 1 ........................... <me>
  [ 89] objcall 207 ............................. <me.getID()>
  [ 91] pusharglist 3 ........................... <tmember, #animationSetLoaded, me.getID()>
  [ 93] extcall 720 ............................. <registerDownloadCallback(tmember, #animationSetLoaded, me.getID())>
  [ 96] pusharglistnoret 1 ...................... <registerDownloadCallback(tmember, #animationSetLoaded, me.getID())>
  [ 98] extcall 189 ............................. return registerDownloadCallback(tmember, #animationSetLoaded, me.getID())
  [100] ret
end

on partSetLoaded me, tParams, tSuccess
  [  0] getparam 2 .............................. <tSuccess>
  [  2] not ..................................... <not tSuccess>
  [  3] jmpifz [ 36] ............................ if not tSuccess then
  [  6] pushcons 46 ............................. <"error">
  [  8] pushcons 59 ............................. <"part_sets">
  [ 10] pusharglist 2 ........................... <["error": "part_sets"]>
  [ 12] pushproplist ............................ <["error": "part_sets"]>
  [ 13] pusharglistnoret 1 ...................... <["error": "part_sets"]>
  [ 15] extcall 727 ............................. fatalError(["error": "part_sets"])
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 60 ............................. <"Failure while loading partset XML">
  [ 22] pushsymb 680 ............................ <#partSetLoaded>
  [ 25] pushsymb 710 ............................ <#critical>
  [ 28] pusharglist 4 ........................... <me, "Failure while loading partset XML", #partSetLoaded, #critical>
  [ 30] extcall 176 ............................. <error(me, "Failure while loading partset XML", #partSetLoaded, #critical)>
  [ 32] pusharglistnoret 1 ...................... <error(me, "Failure while loading partset XML", #partSetLoaded, #critical)>
  [ 34] extcall 189 ............................. return error(me, "Failure while loading partset XML", #partSetLoaded, #critical)
  [ 36] pushcons 53 ............................. <"figure.partsets.xml">
  [ 38] pusharglist 1 ........................... <"figure.partsets.xml">
  [ 40] extcall 164 ............................. <getVariable("figure.partsets.xml")>
  [ 42] setlocal 0 .............................. tMemName = getVariable("figure.partsets.xml")
  [ 44] getlocal 0 .............................. <tMemName>
  [ 46] pushzero ................................ <0>
  [ 47] eq ...................................... <tMemName = 0>
  [ 48] jmpifz [ 69] ............................ if tMemName = 0 then
  [ 51] getparam 0 .............................. <me>
  [ 53] pushcons 60 ............................. <"Failure while loading partset XML">
  [ 55] pushsymb 680 ............................ <#partSetLoaded>
  [ 58] pushsymb 710 ............................ <#critical>
  [ 61] pusharglist 4 ........................... <me, "Failure while loading partset XML", #partSetLoaded, #critical>
  [ 63] extcall 176 ............................. <error(me, "Failure while loading partset XML", #partSetLoaded, #critical)>
  [ 65] pusharglistnoret 1 ...................... <error(me, "Failure while loading partset XML", #partSetLoaded, #critical)>
  [ 67] extcall 189 ............................. return error(me, "Failure while loading partset XML", #partSetLoaded, #critical)
  [ 69] getlocal 0 .............................. <tMemName>
  [ 71] pusharglist 1 ........................... <tMemName>
  [ 73] extcall 201 ............................. <memberExists(tMemName)>
  [ 75] not ..................................... <not memberExists(tMemName)>
  [ 76] jmpifz [ 97] ............................ if not memberExists(tMemName) then
  [ 79] getparam 0 .............................. <me>
  [ 81] pushcons 60 ............................. <"Failure while loading partset XML">
  [ 83] pushsymb 680 ............................ <#partSetLoaded>
  [ 86] pushsymb 710 ............................ <#critical>
  [ 89] pusharglist 4 ........................... <me, "Failure while loading partset XML", #partSetLoaded, #critical>
  [ 91] extcall 176 ............................. <error(me, "Failure while loading partset XML", #partSetLoaded, #critical)>
  [ 93] pusharglistnoret 1 ...................... <error(me, "Failure while loading partset XML", #partSetLoaded, #critical)>
  [ 95] extcall 189 ............................. return error(me, "Failure while loading partset XML", #partSetLoaded, #critical)
  [ 97] getprop 690 ............................. <pDontProfile>
  [100] not ..................................... <not pDontProfile>
  [101] jmpifz [111] ............................ if not pDontProfile then
  [104] pushcons 61 ............................. <"Figure System::partSetLoaded">
  [106] pusharglistnoret 1 ...................... <"Figure System::partSetLoaded">
  [108] extcall 728 ............................. startProfilingTask("Figure System::partSetLoaded")
  [111] getlocal 0 .............................. <tMemName>
  [113] pusharglist 1 ........................... <tMemName>
  [115] extcall 142 ............................. <member(tMemName)>
  [117] getobjprop 349 .......................... <member(tMemName).text>
  [120] setlocal 1 .............................. tdata = member(tMemName).text
  [122] getlocal 1 .............................. <tdata>
  [124] pusharglist 1 ........................... <tdata>
  [126] extcall 194 ............................. <voidp(tdata)>
  [128] not ..................................... <not voidp(tdata)>
  [129] jmpifz [1105] ........................... if not voidp(tdata) then
  [132] pushcons 62 ............................. <"human.size.64">
  [134] pusharglist 1 ........................... <"human.size.64">
  [136] extcall 164 ............................. <getVariable("human.size.64")>
  [138] setlocal 2 .............................. tPeopleSize = getVariable("human.size.64")
  [140] pushcons 63 ............................. <"human.size.32">
  [142] pusharglist 1 ........................... <"human.size.32">
  [144] extcall 164 ............................. <getVariable("human.size.32")>
  [146] setlocal 3 .............................. tPeopleSize50 = getVariable("human.size.32")
  [148] pushcons 64 ............................. <"xmlparser">
  [150] pusharglist 1 ........................... <"xmlparser">
  [152] extcall 636 ............................. <xtra("xmlparser")>
  [155] pusharglist 1 ........................... <xtra("xmlparser")>
  [157] extcall 458 ............................. <new(xtra("xmlparser"))>
  [160] setlocal 4 .............................. tParserObject = new(xtra("xmlparser"))
  [162] getlocal 4 .............................. <tParserObject>
  [164] getlocal 1 .............................. <tdata>
  [166] pusharglist 2 ........................... <tParserObject, tdata>
  [168] objcall 637 ............................. <tParserObject.parseString(tdata)>
  [171] setlocal 5 .............................. errCode = tParserObject.parseString(tdata)
  [173] getlocal 4 .............................. <tParserObject>
  [175] pusharglist 1 ........................... <tParserObject>
  [177] objcall 638 ............................. <tParserObject.getError()>
  [180] setlocal 6 .............................. errorString = tParserObject.getError()
  [182] getlocal 6 .............................. <errorString>
  [184] pusharglist 1 ........................... <errorString>
  [186] extcall 194 ............................. <voidp(errorString)>
  [188] not ..................................... <not voidp(errorString)>
  [189] jmpifz [222] ............................ if not voidp(errorString) then
  [192] pushcons 46 ............................. <"error">
  [194] pushcons 65 ............................. <"part_sets_invalid">
  [196] pusharglist 2 ........................... <["error": "part_sets_invalid"]>
  [198] pushproplist ............................ <["error": "part_sets_invalid"]>
  [199] pusharglistnoret 1 ...................... <["error": "part_sets_invalid"]>
  [201] extcall 727 ............................. fatalError(["error": "part_sets_invalid"])
  [204] getparam 0 .............................. <me>
  [206] pushcons 66 ............................. <"Failure while parsing partset XML">
  [208] pushsymb 680 ............................ <#partSetLoaded>
  [211] pushsymb 710 ............................ <#critical>
  [214] pusharglist 4 ........................... <me, "Failure while parsing partset XML", #partSetLoaded, #critical>
  [216] extcall 176 ............................. <error(me, "Failure while parsing partset XML", #partSetLoaded, #critical)>
  [218] pusharglistnoret 1 ...................... <error(me, "Failure while parsing partset XML", #partSetLoaded, #critical)>
  [220] extcall 189 ............................. return error(me, "Failure while parsing partset XML", #partSetLoaded, #critical)
  [222] pushint8 1 .............................. <1>
  [224] setlocal 7
  [226] getlocal 7
  [228] getlocal 4 .............................. <tParserObject>
  [230] pushsymb 639 ............................ <#child>
  [233] pusharglist 2 ........................... <tParserObject, #child>
  [235] objcall 172 ............................. <tParserObject.child.count>
  [237] lteq
  [238] jmpifz [1105] ........................... repeat with i = 1 to tParserObject.child.count
  [241] getlocal 4 .............................. <tParserObject>
  [243] pushsymb 639 ............................ <#child>
  [246] getlocal 7 .............................. <i>
  [248] pusharglist 3 ........................... <tParserObject, #child, i>
  [250] objcall 352 ............................. <tParserObject.child[i]>
  [253] getobjprop 234 .......................... <tParserObject.child[i].name>
  [255] setlocal 8 .............................. tName = tParserObject.child[i].name
  [257] getlocal 8 .............................. <tName>
  [259] pushcons 67 ............................. <"partSets">
  [261] eq ...................................... <tName = "partSets">
  [262] jmpifz [1095] ........................... if tName = "partSets" then
  [265] pushint8 1 .............................. <1>
  [267] setlocal 9
  [269] getlocal 9
  [271] getlocal 4 .............................. <tParserObject>
  [273] pushsymb 639 ............................ <#child>
  [276] getlocal 7 .............................. <i>
  [278] pusharglist 3 ........................... <tParserObject, #child, i>
  [280] objcall 352 ............................. <tParserObject.child[i]>
  [283] pushsymb 639 ............................ <#child>
  [286] pusharglist 2 ........................... <tParserObject.child[i], #child>
  [288] objcall 172 ............................. <tParserObject.child[i].child.count>
  [290] lteq
  [291] jmpifz [1095] ........................... repeat with j = 1 to tParserObject.child[i].child.count
  [294] getlocal 4 .............................. <tParserObject>
  [296] pushsymb 639 ............................ <#child>
  [299] getlocal 7 .............................. <i>
  [301] pusharglist 3 ........................... <tParserObject, #child, i>
  [303] objcall 352 ............................. <tParserObject.child[i]>
  [306] pushsymb 639 ............................ <#child>
  [309] getlocal 9 .............................. <j>
  [311] pusharglist 3 ........................... <tParserObject.child[i], #child, j>
  [313] objcall 311 ............................. <tParserObject.child[i].child[j]>
  [316] setlocal 10 ............................. tElementPartSet = tParserObject.child[i].child[j]
  [318] getlocal 10 ............................. <tElementPartSet>
  [320] getobjprop 234 .......................... <tElementPartSet.name>
  [322] pushcons 68 ............................. <"partSet">
  [324] eq ...................................... <tElementPartSet.name = "partSet">
  [325] jmpifz [774] ............................ if tElementPartSet.name = "partSet" then
  [328] pusharglist 0 ........................... <[]>
  [330] pushlist ................................ <[]>
  [331] setlocal 11 ............................. tFullList = []
  [333] pusharglist 0 ........................... <[]>
  [335] pushlist ................................ <[]>
  [336] setlocal 12 ............................. tSwimList = []
  [338] pusharglist 0 ........................... <[]>
  [340] pushlist ................................ <[]>
  [341] setlocal 13 ............................. tSmallList = []
  [343] pusharglist 0 ........................... <[]>
  [345] pushlist ................................ <[]>
  [346] setlocal 14 ............................. tSwimSmallList = []
  [348] pusharglist 0 ........................... <[:]>
  [350] pushproplist ............................ <[:]>
  [351] setlocal 15 ............................. tFlipList = [:]
  [353] pusharglist 0 ........................... <[:]>
  [355] pushproplist ............................ <[:]>
  [356] setlocal 16 ............................. tRemoveList = [:]
  [358] pushint8 1 .............................. <1>
  [360] setlocal 17
  [362] getlocal 17
  [364] getlocal 10 ............................. <tElementPartSet>
  [366] pushsymb 639 ............................ <#child>
  [369] pusharglist 2 ........................... <tElementPartSet, #child>
  [371] objcall 172 ............................. <tElementPartSet.child.count>
  [373] lteq
  [374] jmpifz [705] ............................ repeat with k = 1 to tElementPartSet.child.count
  [377] getlocal 10 ............................. <tElementPartSet>
  [379] pushsymb 639 ............................ <#child>
  [382] getlocal 17 ............................. <k>
  [384] pusharglist 3 ........................... <tElementPartSet, #child, k>
  [386] objcall 311 ............................. <tElementPartSet.child[k]>
  [389] setlocal 18 ............................. tElementPart = tElementPartSet.child[k]
  [391] getlocal 18 ............................. <tElementPart>
  [393] getobjprop 234 .......................... <tElementPart.name>
  [395] pushcons 69 ............................. <"part">
  [397] eq ...................................... <tElementPart.name = "part">
  [398] jmpifz [695] ............................ if tElementPart.name = "part" then
  [401] pushcons 70 ............................. <"swim">
  [403] pushint8 1 .............................. <1>
  [405] pushcons 71 ............................. <"small">
  [407] pushint8 1 .............................. <1>
  [409] pusharglist 4 ........................... <["swim": 1, "small": 1]>
  [411] pushproplist ............................ <["swim": 1, "small": 1]>
  [412] setlocal 19 ............................. tAttributes = ["swim": 1, "small": 1]
  [414] pushint8 1 .............................. <1>
  [416] setlocal 20
  [418] getlocal 20
  [420] getlocal 18 ............................. <tElementPart>
  [422] pushsymb 657 ............................ <#attributeName>
  [425] pusharglist 2 ........................... <tElementPart, #attributeName>
  [427] objcall 172 ............................. <tElementPart.attributeName.count>
  [429] lteq
  [430] jmpifz [480] ............................ repeat with l = 1 to tElementPart.attributeName.count
  [433] getlocal 18 ............................. <tElementPart>
  [435] pushsymb 657 ............................ <#attributeName>
  [438] getlocal 20 ............................. <l>
  [440] pusharglist 3 ........................... <tElementPart, #attributeName, l>
  [442] objcall 311 ............................. <tElementPart.attributeName[l]>
  [445] setlocal 8 .............................. tName = tElementPart.attributeName[l]
  [447] getlocal 18 ............................. <tElementPart>
  [449] pushsymb 658 ............................ <#attributeValue>
  [452] getlocal 20 ............................. <l>
  [454] pusharglist 3 ........................... <tElementPart, #attributeValue, l>
  [456] objcall 311 ............................. <tElementPart.attributeValue[l]>
  [459] setlocal 21 ............................. tValue = tElementPart.attributeValue[l]
  [461] getlocal 19 ............................. <tAttributes>
  [463] getlocal 8 .............................. <tName>
  [465] getlocal 21 ............................. <tValue>
  [467] pusharglistnoret 3 ...................... <tAttributes, tName, tValue>
  [469] objcall 175 ............................. tAttributes[tName] = tValue
  [471] pushint8 1
  [473] getlocal 20
  [475] add
  [476] setlocal 20
  [478] endrepeat [418]
  [480] getlocal 19 ............................. <tAttributes>
  [482] pushcons 72 ............................. <"set-type">
  [484] pusharglist 2 ........................... <tAttributes, "set-type">
  [486] objcall 173 ............................. <tAttributes["set-type"]>
  [488] pusharglist 1 ........................... <tAttributes["set-type"]>
  [490] extcall 194 ............................. <voidp(tAttributes["set-type"])>
  [492] not ..................................... <not voidp(tAttributes["set-type"])>
  [493] jmpifz [682] ............................ if not voidp(tAttributes["set-type"]) then
  [496] getlocal 11 ............................. <tFullList>
  [498] getlocal 19 ............................. <tAttributes>
  [500] pushcons 72 ............................. <"set-type">
  [502] pusharglist 2 ........................... <tAttributes, "set-type">
  [504] objcall 173 ............................. <tAttributes["set-type"]>
  [506] pusharglistnoret 2 ...................... <tFullList, tAttributes["set-type"]>
  [508] objcall 389 ............................. tFullList.add(tAttributes["set-type"])
  [511] getlocal 19 ............................. <tAttributes>
  [513] pushcons 70 ............................. <"swim">
  [515] pusharglist 2 ........................... <tAttributes, "swim">
  [517] objcall 173 ............................. <tAttributes["swim"]>
  [519] pusharglist 1 ........................... <tAttributes["swim"]>
  [521] extcall 156 ............................. <value(tAttributes["swim"])>
  [523] jmpifz [571] ............................ if value(tAttributes["swim"]) then
  [526] getlocal 12 ............................. <tSwimList>
  [528] getlocal 19 ............................. <tAttributes>
  [530] pushcons 72 ............................. <"set-type">
  [532] pusharglist 2 ........................... <tAttributes, "set-type">
  [534] objcall 173 ............................. <tAttributes["set-type"]>
  [536] pusharglistnoret 2 ...................... <tSwimList, tAttributes["set-type"]>
  [538] objcall 389 ............................. tSwimList.add(tAttributes["set-type"])
  [541] getlocal 19 ............................. <tAttributes>
  [543] pushcons 71 ............................. <"small">
  [545] pusharglist 2 ........................... <tAttributes, "small">
  [547] objcall 173 ............................. <tAttributes["small"]>
  [549] pusharglist 1 ........................... <tAttributes["small"]>
  [551] extcall 156 ............................. <value(tAttributes["small"])>
  [553] jmpifz [571] ............................ if value(tAttributes["small"]) then
  [556] getlocal 14 ............................. <tSwimSmallList>
  [558] getlocal 19 ............................. <tAttributes>
  [560] pushcons 72 ............................. <"set-type">
  [562] pusharglist 2 ........................... <tAttributes, "set-type">
  [564] objcall 173 ............................. <tAttributes["set-type"]>
  [566] pusharglistnoret 2 ...................... <tSwimSmallList, tAttributes["set-type"]>
  [568] objcall 389 ............................. tSwimSmallList.add(tAttributes["set-type"])
  [571] getlocal 19 ............................. <tAttributes>
  [573] pushcons 71 ............................. <"small">
  [575] pusharglist 2 ........................... <tAttributes, "small">
  [577] objcall 173 ............................. <tAttributes["small"]>
  [579] pusharglist 1 ........................... <tAttributes["small"]>
  [581] extcall 156 ............................. <value(tAttributes["small"])>
  [583] jmpifz [601] ............................ if value(tAttributes["small"]) then
  [586] getlocal 13 ............................. <tSmallList>
  [588] getlocal 19 ............................. <tAttributes>
  [590] pushcons 72 ............................. <"set-type">
  [592] pusharglist 2 ........................... <tAttributes, "set-type">
  [594] objcall 173 ............................. <tAttributes["set-type"]>
  [596] pusharglistnoret 2 ...................... <tSmallList, tAttributes["set-type"]>
  [598] objcall 389 ............................. tSmallList.add(tAttributes["set-type"])
  [601] getlocal 19 ............................. <tAttributes>
  [603] pushcons 73 ............................. <"flipped-set-type">
  [605] pusharglist 2 ........................... <tAttributes, "flipped-set-type">
  [607] objcall 173 ............................. <tAttributes["flipped-set-type"]>
  [609] pusharglist 1 ........................... <tAttributes["flipped-set-type"]>
  [611] extcall 194 ............................. <voidp(tAttributes["flipped-set-type"])>
  [613] not ..................................... <not voidp(tAttributes["flipped-set-type"])>
  [614] jmpifz [640] ............................ if not voidp(tAttributes["flipped-set-type"]) then
  [617] getlocal 15 ............................. <tFlipList>
  [619] getlocal 19 ............................. <tAttributes>
  [621] pushcons 72 ............................. <"set-type">
  [623] pusharglist 2 ........................... <tAttributes, "set-type">
  [625] objcall 173 ............................. <tAttributes["set-type"]>
  [627] getlocal 19 ............................. <tAttributes>
  [629] pushcons 73 ............................. <"flipped-set-type">
  [631] pusharglist 2 ........................... <tAttributes, "flipped-set-type">
  [633] objcall 173 ............................. <tAttributes["flipped-set-type"]>
  [635] pusharglistnoret 3 ...................... <tFlipList, tAttributes["set-type"], tAttributes["flipped-set-type"]>
  [637] objcall 398 ............................. tFlipList.addProp(tAttributes["set-type"], tAttributes["flipped-set-type"])
  [640] getlocal 19 ............................. <tAttributes>
  [642] pushcons 74 ............................. <"remove-set-type">
  [644] pusharglist 2 ........................... <tAttributes, "remove-set-type">
  [646] objcall 173 ............................. <tAttributes["remove-set-type"]>
  [648] pusharglist 1 ........................... <tAttributes["remove-set-type"]>
  [650] extcall 194 ............................. <voidp(tAttributes["remove-set-type"])>
  [652] not ..................................... <not voidp(tAttributes["remove-set-type"])>
  [653] jmpifz [679] ............................ if not voidp(tAttributes["remove-set-type"]) then
  [656] getlocal 16 ............................. <tRemoveList>
  [658] getlocal 19 ............................. <tAttributes>
  [660] pushcons 72 ............................. <"set-type">
  [662] pusharglist 2 ........................... <tAttributes, "set-type">
  [664] objcall 173 ............................. <tAttributes["set-type"]>
  [666] getlocal 19 ............................. <tAttributes>
  [668] pushcons 74 ............................. <"remove-set-type">
  [670] pusharglist 2 ........................... <tAttributes, "remove-set-type">
  [672] objcall 173 ............................. <tAttributes["remove-set-type"]>
  [674] pusharglistnoret 3 ...................... <tRemoveList, tAttributes["set-type"], tAttributes["remove-set-type"]>
  [676] objcall 398 ............................. tRemoveList.addProp(tAttributes["set-type"], tAttributes["remove-set-type"])
  [679] jmp [695] ............................... next repeat
  [682] getparam 0 .............................. <me>
  [684] pushcons 75 ............................. <"missing set-type attribute for part in partSet element!">
  [686] pushsymb 677 ............................ <#loadPartSetXML>
  [689] pushsymb 177 ............................ <#major>
  [691] pusharglistnoret 4 ...................... <me, "missing set-type attribute for part in partSet element!", #loadPartSetXML, #major>
  [693] extcall 176 ............................. error(me, "missing set-type attribute for part in partSet element!", #loadPartSetXML, #major)
  [695] pushint8 1
  [697] getlocal 17
  [699] add
  [700] setlocal 17
  [702] endrepeat [362]
  [705] pushcons 76 ............................. <"human.parts.">
  [707] getlocal 2 .............................. <tPeopleSize>
  [709] joinstr ................................. <"human.parts." & tPeopleSize>
  [710] getlocal 11 ............................. <tFullList>
  [712] pusharglistnoret 2 ...................... <"human.parts." & tPeopleSize, tFullList>
  [714] extcall 688 ............................. setVariable("human.parts." & tPeopleSize, tFullList)
  [717] pushcons 76 ............................. <"human.parts.">
  [719] getlocal 3 .............................. <tPeopleSize50>
  [721] joinstr ................................. <"human.parts." & tPeopleSize50>
  [722] getlocal 13 ............................. <tSmallList>
  [724] pusharglistnoret 2 ...................... <"human.parts." & tPeopleSize50, tSmallList>
  [726] extcall 688 ............................. setVariable("human.parts." & tPeopleSize50, tSmallList)
  [729] pushcons 77 ............................. <"swimmer.parts.">
  [731] getlocal 2 .............................. <tPeopleSize>
  [733] joinstr ................................. <"swimmer.parts." & tPeopleSize>
  [734] getlocal 12 ............................. <tSwimList>
  [736] pusharglistnoret 2 ...................... <"swimmer.parts." & tPeopleSize, tSwimList>
  [738] extcall 688 ............................. setVariable("swimmer.parts." & tPeopleSize, tSwimList)
  [741] pushcons 77 ............................. <"swimmer.parts.">
  [743] getlocal 3 .............................. <tPeopleSize50>
  [745] joinstr ................................. <"swimmer.parts." & tPeopleSize50>
  [746] getlocal 14 ............................. <tSwimSmallList>
  [748] pusharglistnoret 2 ...................... <"swimmer.parts." & tPeopleSize50, tSwimSmallList>
  [750] extcall 688 ............................. setVariable("swimmer.parts." & tPeopleSize50, tSwimSmallList)
  [753] pushcons 78 ............................. <"human.parts.flipList">
  [755] getlocal 15 ............................. <tFlipList>
  [757] pusharglistnoret 2 ...................... <"human.parts.flipList", tFlipList>
  [759] extcall 688 ............................. setVariable("human.parts.flipList", tFlipList)
  [762] pushcons 52 ............................. <"human.parts.removeList">
  [764] getlocal 16 ............................. <tRemoveList>
  [766] pusharglistnoret 2 ...................... <"human.parts.removeList", tRemoveList>
  [768] extcall 688 ............................. setVariable("human.parts.removeList", tRemoveList)
  [771] jmp [1085] .............................. next repeat
  [774] getlocal 10 ............................. <tElementPartSet>
  [776] getobjprop 234 .......................... <tElementPartSet.name>
  [778] pushcons 79 ............................. <"activePartSet">
  [780] eq ...................................... <tElementPartSet.name = "activePartSet">
  [781] jmpifz [1085] ........................... if tElementPartSet.name = "activePartSet" then
  [784] pusharglist 0 ........................... <[]>
  [786] pushlist ................................ <[]>
  [787] setlocal 22 ............................. tPartList = []
  [789] pusharglist 0 ........................... <>
  [791] extcall 101 ............................. <VOID>
  [793] setlocal 23 ............................. tID = VOID
  [795] pushint8 1 .............................. <1>
  [797] setlocal 20
  [799] getlocal 20
  [801] getlocal 10 ............................. <tElementPartSet>
  [803] pushsymb 657 ............................ <#attributeName>
  [806] pusharglist 2 ........................... <tElementPartSet, #attributeName>
  [808] objcall 172 ............................. <tElementPartSet.attributeName.count>
  [810] lteq
  [811] jmpifz [863] ............................ repeat with l = 1 to tElementPartSet.attributeName.count
  [814] getlocal 10 ............................. <tElementPartSet>
  [816] pushsymb 657 ............................ <#attributeName>
  [819] getlocal 20 ............................. <l>
  [821] pusharglist 3 ........................... <tElementPartSet, #attributeName, l>
  [823] objcall 311 ............................. <tElementPartSet.attributeName[l]>
  [826] setlocal 8 .............................. tName = tElementPartSet.attributeName[l]
  [828] getlocal 10 ............................. <tElementPartSet>
  [830] pushsymb 658 ............................ <#attributeValue>
  [833] getlocal 20 ............................. <l>
  [835] pusharglist 3 ........................... <tElementPartSet, #attributeValue, l>
  [837] objcall 311 ............................. <tElementPartSet.attributeValue[l]>
  [840] setlocal 21 ............................. tValue = tElementPartSet.attributeValue[l]
  [842] getlocal 8 .............................. <tName>
  [844] pushcons 27 ............................. <"id">
  [846] eq ...................................... <tName = "id">
  [847] jmpifz [854] ............................ if tName = "id" then
  [850] getlocal 21 ............................. <tValue>
  [852] setlocal 23 ............................. tID = tValue
  [854] pushint8 1
  [856] getlocal 20
  [858] add
  [859] setlocal 20
  [861] endrepeat [799]
  [863] getlocal 23 ............................. <tID>
  [865] pusharglist 1 ........................... <tID>
  [867] extcall 194 ............................. <voidp(tID)>
  [869] not ..................................... <not voidp(tID)>
  [870] jmpifz [1072] ........................... if not voidp(tID) then
  [873] pushint8 1 .............................. <1>
  [875] setlocal 17
  [877] getlocal 17
  [879] getlocal 10 ............................. <tElementPartSet>
  [881] pushsymb 639 ............................ <#child>
  [884] pusharglist 2 ........................... <tElementPartSet, #child>
  [886] objcall 172 ............................. <tElementPartSet.child.count>
  [888] lteq
  [889] jmpifz [1033] ........................... repeat with k = 1 to tElementPartSet.child.count
  [892] getlocal 10 ............................. <tElementPartSet>
  [894] pushsymb 639 ............................ <#child>
  [897] getlocal 17 ............................. <k>
  [899] pusharglist 3 ........................... <tElementPartSet, #child, k>
  [901] objcall 311 ............................. <tElementPartSet.child[k]>
  [904] setlocal 18 ............................. tElementPart = tElementPartSet.child[k]
  [906] getlocal 18 ............................. <tElementPart>
  [908] getobjprop 234 .......................... <tElementPart.name>
  [910] pushcons 80 ............................. <"activePart">
  [912] eq ...................................... <tElementPart.name = "activePart">
  [913] jmpifz [1024] ........................... if tElementPart.name = "activePart" then
  [916] pushcons 72 ............................. <"set-type">
  [918] pusharglist 0 ........................... <>
  [920] extcall 101 ............................. <VOID>
  [922] pusharglist 2 ........................... <["set-type": VOID]>
  [924] pushproplist ............................ <["set-type": VOID]>
  [925] setlocal 19 ............................. tAttributes = ["set-type": VOID]
  [927] pushint8 1 .............................. <1>
  [929] setlocal 20
  [931] getlocal 20
  [933] getlocal 18 ............................. <tElementPart>
  [935] pushsymb 657 ............................ <#attributeName>
  [938] pusharglist 2 ........................... <tElementPart, #attributeName>
  [940] objcall 172 ............................. <tElementPart.attributeName.count>
  [942] lteq
  [943] jmpifz [993] ............................ repeat with l = 1 to tElementPart.attributeName.count
  [946] getlocal 18 ............................. <tElementPart>
  [948] pushsymb 657 ............................ <#attributeName>
  [951] getlocal 20 ............................. <l>
  [953] pusharglist 3 ........................... <tElementPart, #attributeName, l>
  [955] objcall 311 ............................. <tElementPart.attributeName[l]>
  [958] setlocal 8 .............................. tName = tElementPart.attributeName[l]
  [960] getlocal 18 ............................. <tElementPart>
  [962] pushsymb 658 ............................ <#attributeValue>
  [965] getlocal 20 ............................. <l>
  [967] pusharglist 3 ........................... <tElementPart, #attributeValue, l>
  [969] objcall 311 ............................. <tElementPart.attributeValue[l]>
  [972] setlocal 21 ............................. tValue = tElementPart.attributeValue[l]
  [974] getlocal 19 ............................. <tAttributes>
  [976] getlocal 8 .............................. <tName>
  [978] getlocal 21 ............................. <tValue>
  [980] pusharglistnoret 3 ...................... <tAttributes, tName, tValue>
  [982] objcall 175 ............................. tAttributes[tName] = tValue
  [984] pushint8 1
  [986] getlocal 20
  [988] add
  [989] setlocal 20
  [991] endrepeat [931]
  [993] getlocal 19 ............................. <tAttributes>
  [995] pushcons 72 ............................. <"set-type">
  [997] pusharglist 2 ........................... <tAttributes, "set-type">
  [999] objcall 173 ............................. <tAttributes["set-type"]>
  [1001] pusharglist 1 .......................... <tAttributes["set-type"]>
  [1003] extcall 194 ............................ <voidp(tAttributes["set-type"])>
  [1005] not .................................... <not voidp(tAttributes["set-type"])>
  [1006] jmpifz [1024] .......................... if not voidp(tAttributes["set-type"]) then
  [1009] getlocal 22 ............................ <tPartList>
  [1011] getlocal 19 ............................ <tAttributes>
  [1013] pushcons 72 ............................ <"set-type">
  [1015] pusharglist 2 .......................... <tAttributes, "set-type">
  [1017] objcall 173 ............................ <tAttributes["set-type"]>
  [1019] pusharglistnoret 2 ..................... <tPartList, tAttributes["set-type"]>
  [1021] objcall 389 ............................ tPartList.add(tAttributes["set-type"])
  [1024] pushint8 1
  [1026] getlocal 17
  [1028] add
  [1029] setlocal 17
  [1031] endrepeat [877]
  [1033] pushcons 81 ............................ <"human.partset.">
  [1035] getlocal 23 ............................ <tID>
  [1037] joinstr ................................ <"human.partset." & tID>
  [1038] pushcons 15 ............................ <".">
  [1040] joinstr ................................ <"human.partset." & tID & ".">
  [1041] getlocal 2 ............................. <tPeopleSize>
  [1043] joinstr ................................ <"human.partset." & tID & "." & tPeopleSize>
  [1044] getlocal 22 ............................ <tPartList>
  [1046] pusharglistnoret 2 ..................... <"human.partset." & tID & "." & tPeopleSize, tPartList>
  [1048] extcall 688 ............................ setVariable("human.partset." & tID & "." & tPeopleSize, tPartList)
  [1051] pushcons 81 ............................ <"human.partset.">
  [1053] getlocal 23 ............................ <tID>
  [1055] joinstr ................................ <"human.partset." & tID>
  [1056] pushcons 15 ............................ <".">
  [1058] joinstr ................................ <"human.partset." & tID & ".">
  [1059] getlocal 3 ............................. <tPeopleSize50>
  [1061] joinstr ................................ <"human.partset." & tID & "." & tPeopleSize50>
  [1062] getlocal 22 ............................ <tPartList>
  [1064] pusharglistnoret 2 ..................... <"human.partset." & tID & "." & tPeopleSize50, tPartList>
  [1066] extcall 688 ............................ setVariable("human.partset." & tID & "." & tPeopleSize50, tPartList)
  [1069] jmp [1085] ............................. next repeat
  [1072] getparam 0 ............................. <me>
  [1074] pushcons 82 ............................ <"missing id attribute for activePartSet!">
  [1076] pushsymb 677 ........................... <#loadPartSetXML>
  [1079] pushsymb 177 ........................... <#major>
  [1081] pusharglistnoret 4 ..................... <me, "missing id attribute for activePartSet!", #loadPartSetXML, #major>
  [1083] extcall 176 ............................ error(me, "missing id attribute for activePartSet!", #loadPartSetXML, #major)
  [1085] pushint8 1
  [1087] getlocal 9
  [1089] add
  [1090] setlocal 9
  [1092] endrepeat [269]
  [1095] pushint8 1
  [1097] getlocal 7
  [1099] add
  [1100] setlocal 7
  [1102] endrepeat [226]
  [1105] pushcons 31 ............................ <"partsets.xml.loaded">
  [1107] pushint8 1 ............................. <1>
  [1109] pusharglistnoret 2 ..................... <"partsets.xml.loaded", 1>
  [1111] extcall 688 ............................ setVariable("partsets.xml.loaded", 1)
  [1114] getparam 0 ............................. <me>
  [1116] pusharglistnoret 1 ..................... <me>
  [1118] objcall 673 ............................ me.checkDataLoaded()
  [1121] getprop 690 ............................ <pDontProfile>
  [1124] not .................................... <not pDontProfile>
  [1125] jmpifz [1135] .......................... if not pDontProfile then
  [1128] pushcons 61 ............................ <"Figure System::partSetLoaded">
  [1130] pusharglistnoret 1 ..................... <"Figure System::partSetLoaded">
  [1132] extcall 729 ............................ finishProfilingTask("Figure System::partSetLoaded")
  [1135] ret
end

on actionSetLoaded me, tParams, tSuccess
  [  0] getparam 2 .............................. <tSuccess>
  [  2] not ..................................... <not tSuccess>
  [  3] jmpifz [ 36] ............................ if not tSuccess then
  [  6] pushcons 46 ............................. <"error">
  [  8] pushcons 83 ............................. <"action_set">
  [ 10] pusharglist 2 ........................... <["error": "action_set"]>
  [ 12] pushproplist ............................ <["error": "action_set"]>
  [ 13] pusharglistnoret 1 ...................... <["error": "action_set"]>
  [ 15] extcall 727 ............................. fatalError(["error": "action_set"])
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 84 ............................. <"Failure while loading action set XML">
  [ 22] pushsymb 681 ............................ <#actionSetLoaded>
  [ 25] pushsymb 710 ............................ <#critical>
  [ 28] pusharglist 4 ........................... <me, "Failure while loading action set XML", #actionSetLoaded, #critical>
  [ 30] extcall 176 ............................. <error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)>
  [ 32] pusharglistnoret 1 ...................... <error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)>
  [ 34] extcall 189 ............................. return error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)
  [ 36] pushcons 55 ............................. <"figure.draworder.xml">
  [ 38] pusharglist 1 ........................... <"figure.draworder.xml">
  [ 40] extcall 164 ............................. <getVariable("figure.draworder.xml")>
  [ 42] setlocal 0 .............................. tMemName = getVariable("figure.draworder.xml")
  [ 44] getlocal 0 .............................. <tMemName>
  [ 46] pushzero ................................ <0>
  [ 47] eq ...................................... <tMemName = 0>
  [ 48] jmpifz [ 69] ............................ if tMemName = 0 then
  [ 51] getparam 0 .............................. <me>
  [ 53] pushcons 84 ............................. <"Failure while loading action set XML">
  [ 55] pushsymb 681 ............................ <#actionSetLoaded>
  [ 58] pushsymb 710 ............................ <#critical>
  [ 61] pusharglist 4 ........................... <me, "Failure while loading action set XML", #actionSetLoaded, #critical>
  [ 63] extcall 176 ............................. <error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)>
  [ 65] pusharglistnoret 1 ...................... <error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)>
  [ 67] extcall 189 ............................. return error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)
  [ 69] getlocal 0 .............................. <tMemName>
  [ 71] pusharglist 1 ........................... <tMemName>
  [ 73] extcall 201 ............................. <memberExists(tMemName)>
  [ 75] not ..................................... <not memberExists(tMemName)>
  [ 76] jmpifz [ 97] ............................ if not memberExists(tMemName) then
  [ 79] getparam 0 .............................. <me>
  [ 81] pushcons 84 ............................. <"Failure while loading action set XML">
  [ 83] pushsymb 681 ............................ <#actionSetLoaded>
  [ 86] pushsymb 710 ............................ <#critical>
  [ 89] pusharglist 4 ........................... <me, "Failure while loading action set XML", #actionSetLoaded, #critical>
  [ 91] extcall 176 ............................. <error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)>
  [ 93] pusharglistnoret 1 ...................... <error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)>
  [ 95] extcall 189 ............................. return error(me, "Failure while loading action set XML", #actionSetLoaded, #critical)
  [ 97] getprop 690 ............................. <pDontProfile>
  [100] not ..................................... <not pDontProfile>
  [101] jmpifz [111] ............................ if not pDontProfile then
  [104] pushcons 85 ............................. <"Figure System::actionSetLoaded">
  [106] pusharglistnoret 1 ...................... <"Figure System::actionSetLoaded">
  [108] extcall 728 ............................. startProfilingTask("Figure System::actionSetLoaded")
  [111] getlocal 0 .............................. <tMemName>
  [113] pusharglist 1 ........................... <tMemName>
  [115] extcall 142 ............................. <member(tMemName)>
  [117] getobjprop 349 .......................... <member(tMemName).text>
  [120] setlocal 1 .............................. tdata = member(tMemName).text
  [122] getlocal 1 .............................. <tdata>
  [124] pusharglist 1 ........................... <tdata>
  [126] extcall 194 ............................. <voidp(tdata)>
  [128] not ..................................... <not voidp(tdata)>
  [129] jmpifz [751] ............................ if not voidp(tdata) then
  [132] pushcons 62 ............................. <"human.size.64">
  [134] pusharglist 1 ........................... <"human.size.64">
  [136] extcall 164 ............................. <getVariable("human.size.64")>
  [138] setlocal 2 .............................. tPeopleSize = getVariable("human.size.64")
  [140] pushcons 63 ............................. <"human.size.32">
  [142] pusharglist 1 ........................... <"human.size.32">
  [144] extcall 164 ............................. <getVariable("human.size.32")>
  [146] setlocal 3 .............................. tPeopleSize50 = getVariable("human.size.32")
  [148] pushcons 64 ............................. <"xmlparser">
  [150] pusharglist 1 ........................... <"xmlparser">
  [152] extcall 636 ............................. <xtra("xmlparser")>
  [155] pusharglist 1 ........................... <xtra("xmlparser")>
  [157] extcall 458 ............................. <new(xtra("xmlparser"))>
  [160] setlocal 4 .............................. tParserObject = new(xtra("xmlparser"))
  [162] getlocal 4 .............................. <tParserObject>
  [164] getlocal 1 .............................. <tdata>
  [166] pusharglist 2 ........................... <tParserObject, tdata>
  [168] objcall 637 ............................. <tParserObject.parseString(tdata)>
  [171] setlocal 5 .............................. errCode = tParserObject.parseString(tdata)
  [173] getlocal 4 .............................. <tParserObject>
  [175] pusharglist 1 ........................... <tParserObject>
  [177] objcall 638 ............................. <tParserObject.getError()>
  [180] setlocal 6 .............................. errorString = tParserObject.getError()
  [182] getlocal 6 .............................. <errorString>
  [184] pusharglist 1 ........................... <errorString>
  [186] extcall 194 ............................. <voidp(errorString)>
  [188] not ..................................... <not voidp(errorString)>
  [189] jmpifz [222] ............................ if not voidp(errorString) then
  [192] pushcons 46 ............................. <"error">
  [194] pushcons 86 ............................. <"action_set_invalid">
  [196] pusharglist 2 ........................... <["error": "action_set_invalid"]>
  [198] pushproplist ............................ <["error": "action_set_invalid"]>
  [199] pusharglistnoret 1 ...................... <["error": "action_set_invalid"]>
  [201] extcall 727 ............................. fatalError(["error": "action_set_invalid"])
  [204] getparam 0 .............................. <me>
  [206] pushcons 87 ............................. <"Failure while parsing action set XML">
  [208] pushsymb 681 ............................ <#actionSetLoaded>
  [211] pushsymb 710 ............................ <#critical>
  [214] pusharglist 4 ........................... <me, "Failure while parsing action set XML", #actionSetLoaded, #critical>
  [216] extcall 176 ............................. <error(me, "Failure while parsing action set XML", #actionSetLoaded, #critical)>
  [218] pusharglistnoret 1 ...................... <error(me, "Failure while parsing action set XML", #actionSetLoaded, #critical)>
  [220] extcall 189 ............................. return error(me, "Failure while parsing action set XML", #actionSetLoaded, #critical)
  [222] pushint8 1 .............................. <1>
  [224] setlocal 7
  [226] getlocal 7
  [228] getlocal 4 .............................. <tParserObject>
  [230] pushsymb 639 ............................ <#child>
  [233] pusharglist 2 ........................... <tParserObject, #child>
  [235] objcall 172 ............................. <tParserObject.child.count>
  [237] lteq
  [238] jmpifz [751] ............................ repeat with i = 1 to tParserObject.child.count
  [241] getlocal 4 .............................. <tParserObject>
  [243] pushsymb 639 ............................ <#child>
  [246] getlocal 7 .............................. <i>
  [248] pusharglist 3 ........................... <tParserObject, #child, i>
  [250] objcall 352 ............................. <tParserObject.child[i]>
  [253] getobjprop 234 .......................... <tParserObject.child[i].name>
  [255] setlocal 8 .............................. tName = tParserObject.child[i].name
  [257] getlocal 8 .............................. <tName>
  [259] pushcons 88 ............................. <"actionSet">
  [261] eq ...................................... <tName = "actionSet">
  [262] jmpifz [741] ............................ if tName = "actionSet" then
  [265] pushint8 1 .............................. <1>
  [267] setlocal 9
  [269] getlocal 9
  [271] getlocal 4 .............................. <tParserObject>
  [273] pushsymb 639 ............................ <#child>
  [276] getlocal 7 .............................. <i>
  [278] pusharglist 3 ........................... <tParserObject, #child, i>
  [280] objcall 352 ............................. <tParserObject.child[i]>
  [283] pushsymb 639 ............................ <#child>
  [286] pusharglist 2 ........................... <tParserObject.child[i], #child>
  [288] objcall 172 ............................. <tParserObject.child[i].child.count>
  [290] lteq
  [291] jmpifz [741] ............................ repeat with j = 1 to tParserObject.child[i].child.count
  [294] getlocal 4 .............................. <tParserObject>
  [296] pushsymb 639 ............................ <#child>
  [299] getlocal 7 .............................. <i>
  [301] pusharglist 3 ........................... <tParserObject, #child, i>
  [303] objcall 352 ............................. <tParserObject.child[i]>
  [306] pushsymb 639 ............................ <#child>
  [309] getlocal 9 .............................. <j>
  [311] pusharglist 3 ........................... <tParserObject.child[i], #child, j>
  [313] objcall 311 ............................. <tParserObject.child[i].child[j]>
  [316] setlocal 10 ............................. tElementAction = tParserObject.child[i].child[j]
  [318] getlocal 10 ............................. <tElementAction>
  [320] getobjprop 234 .......................... <tElementAction.name>
  [322] pushcons 89 ............................. <"action">
  [324] eq ...................................... <tElementAction.name = "action">
  [325] jmpifz [731] ............................ if tElementAction.name = "action" then
  [328] pusharglist 0 ........................... <>
  [330] extcall 101 ............................. <VOID>
  [332] setlocal 11 ............................. tID = VOID
  [334] pushint8 1 .............................. <1>
  [336] setlocal 12
  [338] getlocal 12
  [340] getlocal 10 ............................. <tElementAction>
  [342] pushsymb 657 ............................ <#attributeName>
  [345] pusharglist 2 ........................... <tElementAction, #attributeName>
  [347] objcall 172 ............................. <tElementAction.attributeName.count>
  [349] lteq
  [350] jmpifz [402] ............................ repeat with l = 1 to tElementAction.attributeName.count
  [353] getlocal 10 ............................. <tElementAction>
  [355] pushsymb 657 ............................ <#attributeName>
  [358] getlocal 12 ............................. <l>
  [360] pusharglist 3 ........................... <tElementAction, #attributeName, l>
  [362] objcall 311 ............................. <tElementAction.attributeName[l]>
  [365] setlocal 8 .............................. tName = tElementAction.attributeName[l]
  [367] getlocal 10 ............................. <tElementAction>
  [369] pushsymb 658 ............................ <#attributeValue>
  [372] getlocal 12 ............................. <l>
  [374] pusharglist 3 ........................... <tElementAction, #attributeValue, l>
  [376] objcall 311 ............................. <tElementAction.attributeValue[l]>
  [379] setlocal 13 ............................. tValue = tElementAction.attributeValue[l]
  [381] getlocal 8 .............................. <tName>
  [383] pushcons 27 ............................. <"id">
  [385] eq ...................................... <tName = "id">
  [386] jmpifz [393] ............................ if tName = "id" then
  [389] getlocal 13 ............................. <tValue>
  [391] setlocal 11 ............................. tID = tValue
  [393] pushint8 1
  [395] getlocal 12
  [397] add
  [398] setlocal 12
  [400] endrepeat [338]
  [402] getlocal 11 ............................. <tID>
  [404] pusharglist 1 ........................... <tID>
  [406] extcall 194 ............................. <voidp(tID)>
  [408] not ..................................... <not voidp(tID)>
  [409] jmpifz [718] ............................ if not voidp(tID) then
  [412] pushint8 1 .............................. <1>
  [414] setlocal 14
  [416] getlocal 14
  [418] getlocal 10 ............................. <tElementAction>
  [420] pushsymb 639 ............................ <#child>
  [423] pusharglist 2 ........................... <tElementAction, #child>
  [425] objcall 172 ............................. <tElementAction.child.count>
  [427] lteq
  [428] jmpifz [715] ............................ repeat with k = 1 to tElementAction.child.count
  [431] getlocal 10 ............................. <tElementAction>
  [433] pushsymb 639 ............................ <#child>
  [436] getlocal 14 ............................. <k>
  [438] pusharglist 3 ........................... <tElementAction, #child, k>
  [440] objcall 311 ............................. <tElementAction.child[k]>
  [443] setlocal 15 ............................. tElementDirection = tElementAction.child[k]
  [445] getlocal 15 ............................. <tElementDirection>
  [447] getobjprop 234 .......................... <tElementDirection.name>
  [449] pushcons 90 ............................. <"direction">
  [451] eq ...................................... <tElementDirection.name = "direction">
  [452] jmpifz [705] ............................ if tElementDirection.name = "direction" then
  [455] pusharglist 0 ........................... <>
  [457] extcall 101 ............................. <VOID>
  [459] setlocal 16 ............................. tDirection = VOID
  [461] pushint8 1 .............................. <1>
  [463] setlocal 12
  [465] getlocal 12
  [467] getlocal 15 ............................. <tElementDirection>
  [469] pushsymb 657 ............................ <#attributeName>
  [472] pusharglist 2 ........................... <tElementDirection, #attributeName>
  [474] objcall 172 ............................. <tElementDirection.attributeName.count>
  [476] lteq
  [477] jmpifz [529] ............................ repeat with l = 1 to tElementDirection.attributeName.count
  [480] getlocal 15 ............................. <tElementDirection>
  [482] pushsymb 657 ............................ <#attributeName>
  [485] getlocal 12 ............................. <l>
  [487] pusharglist 3 ........................... <tElementDirection, #attributeName, l>
  [489] objcall 311 ............................. <tElementDirection.attributeName[l]>
  [492] setlocal 8 .............................. tName = tElementDirection.attributeName[l]
  [494] getlocal 15 ............................. <tElementDirection>
  [496] pushsymb 658 ............................ <#attributeValue>
  [499] getlocal 12 ............................. <l>
  [501] pusharglist 3 ........................... <tElementDirection, #attributeValue, l>
  [503] objcall 311 ............................. <tElementDirection.attributeValue[l]>
  [506] setlocal 13 ............................. tValue = tElementDirection.attributeValue[l]
  [508] getlocal 8 .............................. <tName>
  [510] pushcons 27 ............................. <"id">
  [512] eq ...................................... <tName = "id">
  [513] jmpifz [520] ............................ if tName = "id" then
  [516] getlocal 13 ............................. <tValue>
  [518] setlocal 16 ............................. tDirection = tValue
  [520] pushint8 1
  [522] getlocal 12
  [524] add
  [525] setlocal 12
  [527] endrepeat [465]
  [529] getlocal 16 ............................. <tDirection>
  [531] pusharglist 1 ........................... <tDirection>
  [533] extcall 194 ............................. <voidp(tDirection)>
  [535] not ..................................... <not voidp(tDirection)>
  [536] jmpifz [705] ............................ if not voidp(tDirection) then
  [539] pusharglist 0 ........................... <[]>
  [541] pushlist ................................ <[]>
  [542] setlocal 17 ............................. tPartList = []
  [544] pushint8 1 .............................. <1>
  [546] setlocal 12
  [548] getlocal 12
  [550] getlocal 15 ............................. <tElementDirection>
  [552] pushsymb 639 ............................ <#child>
  [555] pusharglist 2 ........................... <tElementDirection, #child>
  [557] objcall 172 ............................. <tElementDirection.child.count>
  [559] lteq
  [560] jmpifz [607] ............................ repeat with l = 1 to tElementDirection.child.count
  [563] getlocal 15 ............................. <tElementDirection>
  [565] pushsymb 639 ............................ <#child>
  [568] getlocal 12 ............................. <l>
  [570] pusharglist 3 ........................... <tElementDirection, #child, l>
  [572] objcall 311 ............................. <tElementDirection.child[l]>
  [575] setlocal 18 ............................. tElementPartList = tElementDirection.child[l]
  [577] getlocal 18 ............................. <tElementPartList>
  [579] getobjprop 234 .......................... <tElementPartList.name>
  [581] pushcons 91 ............................. <"partList">
  [583] eq ...................................... <tElementPartList.name = "partList">
  [584] jmpifz [598] ............................ if tElementPartList.name = "partList" then
  [587] getparam 0 .............................. <me>
  [589] getlocal 18 ............................. <tElementPartList>
  [591] pusharglist 2 ........................... <me, tElementPartList>
  [593] objcall 683 ............................. <me.parsePartListXML(tElementPartList)>
  [596] setlocal 17 ............................. tPartList = me.parsePartListXML(tElementPartList)
  [598] pushint8 1
  [600] getlocal 12
  [602] add
  [603] setlocal 12
  [605] endrepeat [548]
  [607] getlocal 11 ............................. <tID>
  [609] pushcons 92 ............................. <"std">
  [611] eq ...................................... <tID = "std">
  [612] jmpifz [654] ............................ if tID = "std" then / else
  [615] pushcons 76 ............................. <"human.parts.">
  [617] getlocal 2 .............................. <tPeopleSize>
  [619] joinstr ................................. <"human.parts." & tPeopleSize>
  [620] pushcons 15 ............................. <".">
  [622] joinstr ................................. <"human.parts." & tPeopleSize & ".">
  [623] getlocal 16 ............................. <tDirection>
  [625] joinstr ................................. <"human.parts." & tPeopleSize & "." & tDirection>
  [626] getlocal 17 ............................. <tPartList>
  [628] pusharglistnoret 2 ...................... <"human.parts." & tPeopleSize & "." & tDirection, tPartList>
  [630] extcall 688 ............................. setVariable("human.parts." & tPeopleSize & "." & tDirection, tPartList)
  [633] pushcons 76 ............................. <"human.parts.">
  [635] getlocal 3 .............................. <tPeopleSize50>
  [637] joinstr ................................. <"human.parts." & tPeopleSize50>
  [638] pushcons 15 ............................. <".">
  [640] joinstr ................................. <"human.parts." & tPeopleSize50 & ".">
  [641] getlocal 16 ............................. <tDirection>
  [643] joinstr ................................. <"human.parts." & tPeopleSize50 & "." & tDirection>
  [644] getlocal 17 ............................. <tPartList>
  [646] pusharglistnoret 2 ...................... <"human.parts." & tPeopleSize50 & "." & tDirection, tPartList>
  [648] extcall 688 ............................. setVariable("human.parts." & tPeopleSize50 & "." & tDirection, tPartList)
  [651] jmp [702]
  [654] pushcons 76 ............................. <"human.parts.">
  [656] getlocal 2 .............................. <tPeopleSize>
  [658] joinstr ................................. <"human.parts." & tPeopleSize>
  [659] pushcons 15 ............................. <".">
  [661] joinstr ................................. <"human.parts." & tPeopleSize & ".">
  [662] getlocal 11 ............................. <tID>
  [664] joinstr ................................. <"human.parts." & tPeopleSize & "." & tID>
  [665] pushcons 15 ............................. <".">
  [667] joinstr ................................. <"human.parts." & tPeopleSize & "." & tID & ".">
  [668] getlocal 16 ............................. <tDirection>
  [670] joinstr ................................. <"human.parts." & tPeopleSize & "." & tID & "." & tDirection>
  [671] getlocal 17 ............................. <tPartList>
  [673] pusharglistnoret 2 ...................... <"human.parts." & tPeopleSize & "." & tID & "." & tDirection, tPartList>
  [675] extcall 688 ............................. setVariable("human.parts." & tPeopleSize & "." & tID & "." & tDirection, tPartList)
  [678] pushcons 76 ............................. <"human.parts.">
  [680] getlocal 3 .............................. <tPeopleSize50>
  [682] joinstr ................................. <"human.parts." & tPeopleSize50>
  [683] pushcons 15 ............................. <".">
  [685] joinstr ................................. <"human.parts." & tPeopleSize50 & ".">
  [686] getlocal 11 ............................. <tID>
  [688] joinstr ................................. <"human.parts." & tPeopleSize50 & "." & tID>
  [689] pushcons 15 ............................. <".">
  [691] joinstr ................................. <"human.parts." & tPeopleSize50 & "." & tID & ".">
  [692] getlocal 16 ............................. <tDirection>
  [694] joinstr ................................. <"human.parts." & tPeopleSize50 & "." & tID & "." & tDirection>
  [695] getlocal 17 ............................. <tPartList>
  [697] pusharglistnoret 2 ...................... <"human.parts." & tPeopleSize50 & "." & tID & "." & tDirection, tPartList>
  [699] extcall 688 ............................. setVariable("human.parts." & tPeopleSize50 & "." & tID & "." & tDirection, tPartList)
  [702] jmp [705] ............................... next repeat
  [705] pushint8 1
  [707] getlocal 14
  [709] add
  [710] setlocal 14
  [712] endrepeat [416]
  [715] jmp [731] ............................... next repeat
  [718] getparam 0 .............................. <me>
  [720] pushcons 93 ............................. <"missing id attribute for partSet!">
  [722] pushsymb 677 ............................ <#loadPartSetXML>
  [725] pushsymb 177 ............................ <#major>
  [727] pusharglistnoret 4 ...................... <me, "missing id attribute for partSet!", #loadPartSetXML, #major>
  [729] extcall 176 ............................. error(me, "missing id attribute for partSet!", #loadPartSetXML, #major)
  [731] pushint8 1
  [733] getlocal 9
  [735] add
  [736] setlocal 9
  [738] endrepeat [269]
  [741] pushint8 1
  [743] getlocal 7
  [745] add
  [746] setlocal 7
  [748] endrepeat [226]
  [751] pushcons 32 ............................. <"draworder.xml.loaded">
  [753] pushint8 1 .............................. <1>
  [755] pusharglistnoret 2 ...................... <"draworder.xml.loaded", 1>
  [757] extcall 688 ............................. setVariable("draworder.xml.loaded", 1)
  [760] getparam 0 .............................. <me>
  [762] pusharglistnoret 1 ...................... <me>
  [764] objcall 673 ............................. me.checkDataLoaded()
  [767] getprop 690 ............................. <pDontProfile>
  [770] not ..................................... <not pDontProfile>
  [771] jmpifz [781] ............................ if not pDontProfile then
  [774] pushcons 85 ............................. <"Figure System::actionSetLoaded">
  [776] pusharglistnoret 1 ...................... <"Figure System::actionSetLoaded">
  [778] extcall 729 ............................. finishProfilingTask("Figure System::actionSetLoaded")
  [781] ret
end

on animationSetLoaded me, tParams, tSuccess
  [  0] getparam 2 .............................. <tSuccess>
  [  2] not ..................................... <not tSuccess>
  [  3] jmpifz [ 36] ............................ if not tSuccess then
  [  6] pushcons 46 ............................. <"error">
  [  8] pushcons 94 ............................. <"animation_set">
  [ 10] pusharglist 2 ........................... <["error": "animation_set"]>
  [ 12] pushproplist ............................ <["error": "animation_set"]>
  [ 13] pusharglistnoret 1 ...................... <["error": "animation_set"]>
  [ 15] extcall 727 ............................. fatalError(["error": "animation_set"])
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 95 ............................. <"Failure while loading animation XML">
  [ 22] pushsymb 682 ............................ <#animationSetLoaded>
  [ 25] pushsymb 710 ............................ <#critical>
  [ 28] pusharglist 4 ........................... <me, "Failure while loading animation XML", #animationSetLoaded, #critical>
  [ 30] extcall 176 ............................. <error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)>
  [ 32] pusharglistnoret 1 ...................... <error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)>
  [ 34] extcall 189 ............................. return error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)
  [ 36] pusharglist 0 ........................... <[:]>
  [ 38] pushproplist ............................ <[:]>
  [ 39] setlocal 0 .............................. tAnimationData = [:]
  [ 41] pushcons 57 ............................. <"figure.animation.xml">
  [ 43] pusharglist 1 ........................... <"figure.animation.xml">
  [ 45] extcall 164 ............................. <getVariable("figure.animation.xml")>
  [ 47] setlocal 1 .............................. tMemName = getVariable("figure.animation.xml")
  [ 49] getlocal 1 .............................. <tMemName>
  [ 51] pushzero ................................ <0>
  [ 52] eq ...................................... <tMemName = 0>
  [ 53] jmpifz [ 74] ............................ if tMemName = 0 then
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 95 ............................. <"Failure while loading animation XML">
  [ 60] pushsymb 682 ............................ <#animationSetLoaded>
  [ 63] pushsymb 710 ............................ <#critical>
  [ 66] pusharglist 4 ........................... <me, "Failure while loading animation XML", #animationSetLoaded, #critical>
  [ 68] extcall 176 ............................. <error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)>
  [ 70] pusharglistnoret 1 ...................... <error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)>
  [ 72] extcall 189 ............................. return error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)
  [ 74] getlocal 1 .............................. <tMemName>
  [ 76] pusharglist 1 ........................... <tMemName>
  [ 78] extcall 201 ............................. <memberExists(tMemName)>
  [ 80] not ..................................... <not memberExists(tMemName)>
  [ 81] jmpifz [102] ............................ if not memberExists(tMemName) then
  [ 84] getparam 0 .............................. <me>
  [ 86] pushcons 95 ............................. <"Failure while loading animation XML">
  [ 88] pushsymb 682 ............................ <#animationSetLoaded>
  [ 91] pushsymb 710 ............................ <#critical>
  [ 94] pusharglist 4 ........................... <me, "Failure while loading animation XML", #animationSetLoaded, #critical>
  [ 96] extcall 176 ............................. <error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)>
  [ 98] pusharglistnoret 1 ...................... <error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)>
  [100] extcall 189 ............................. return error(me, "Failure while loading animation XML", #animationSetLoaded, #critical)
  [102] getprop 690 ............................. <pDontProfile>
  [105] not ..................................... <not pDontProfile>
  [106] jmpifz [116] ............................ if not pDontProfile then
  [109] pushcons 96 ............................. <"Figure System::animationSetLoaded">
  [111] pusharglistnoret 1 ...................... <"Figure System::animationSetLoaded">
  [113] extcall 728 ............................. startProfilingTask("Figure System::animationSetLoaded")
  [116] getlocal 1 .............................. <tMemName>
  [118] pusharglist 1 ........................... <tMemName>
  [120] extcall 142 ............................. <member(tMemName)>
  [122] getobjprop 349 .......................... <member(tMemName).text>
  [125] setlocal 2 .............................. tdata = member(tMemName).text
  [127] getlocal 2 .............................. <tdata>
  [129] pusharglist 1 ........................... <tdata>
  [131] extcall 194 ............................. <voidp(tdata)>
  [133] not ..................................... <not voidp(tdata)>
  [134] jmpifz [685] ............................ if not voidp(tdata) then
  [137] pushcons 62 ............................. <"human.size.64">
  [139] pusharglist 1 ........................... <"human.size.64">
  [141] extcall 164 ............................. <getVariable("human.size.64")>
  [143] setlocal 3 .............................. tPeopleSize = getVariable("human.size.64")
  [145] pushcons 63 ............................. <"human.size.32">
  [147] pusharglist 1 ........................... <"human.size.32">
  [149] extcall 164 ............................. <getVariable("human.size.32")>
  [151] setlocal 4 .............................. tPeopleSize50 = getVariable("human.size.32")
  [153] pushcons 64 ............................. <"xmlparser">
  [155] pusharglist 1 ........................... <"xmlparser">
  [157] extcall 636 ............................. <xtra("xmlparser")>
  [160] pusharglist 1 ........................... <xtra("xmlparser")>
  [162] extcall 458 ............................. <new(xtra("xmlparser"))>
  [165] setlocal 5 .............................. tParserObject = new(xtra("xmlparser"))
  [167] getlocal 5 .............................. <tParserObject>
  [169] getlocal 2 .............................. <tdata>
  [171] pusharglist 2 ........................... <tParserObject, tdata>
  [173] objcall 637 ............................. <tParserObject.parseString(tdata)>
  [176] setlocal 6 .............................. errCode = tParserObject.parseString(tdata)
  [178] getlocal 5 .............................. <tParserObject>
  [180] pusharglist 1 ........................... <tParserObject>
  [182] objcall 638 ............................. <tParserObject.getError()>
  [185] setlocal 7 .............................. errorString = tParserObject.getError()
  [187] getlocal 7 .............................. <errorString>
  [189] pusharglist 1 ........................... <errorString>
  [191] extcall 194 ............................. <voidp(errorString)>
  [193] not ..................................... <not voidp(errorString)>
  [194] jmpifz [227] ............................ if not voidp(errorString) then
  [197] pushcons 46 ............................. <"error">
  [199] pushcons 97 ............................. <"animation_set_invalid">
  [201] pusharglist 2 ........................... <["error": "animation_set_invalid"]>
  [203] pushproplist ............................ <["error": "animation_set_invalid"]>
  [204] pusharglistnoret 1 ...................... <["error": "animation_set_invalid"]>
  [206] extcall 727 ............................. fatalError(["error": "animation_set_invalid"])
  [209] getparam 0 .............................. <me>
  [211] pushcons 98 ............................. <"Failure while parsing animation XML">
  [213] pushsymb 682 ............................ <#animationSetLoaded>
  [216] pushsymb 710 ............................ <#critical>
  [219] pusharglist 4 ........................... <me, "Failure while parsing animation XML", #animationSetLoaded, #critical>
  [221] extcall 176 ............................. <error(me, "Failure while parsing animation XML", #animationSetLoaded, #critical)>
  [223] pusharglistnoret 1 ...................... <error(me, "Failure while parsing animation XML", #animationSetLoaded, #critical)>
  [225] extcall 189 ............................. return error(me, "Failure while parsing animation XML", #animationSetLoaded, #critical)
  [227] pushint8 1 .............................. <1>
  [229] setlocal 8
  [231] getlocal 8
  [233] getlocal 5 .............................. <tParserObject>
  [235] pushsymb 639 ............................ <#child>
  [238] pusharglist 2 ........................... <tParserObject, #child>
  [240] objcall 172 ............................. <tParserObject.child.count>
  [242] lteq
  [243] jmpifz [685] ............................ repeat with i = 1 to tParserObject.child.count
  [246] getlocal 5 .............................. <tParserObject>
  [248] pushsymb 639 ............................ <#child>
  [251] getlocal 8 .............................. <i>
  [253] pusharglist 3 ........................... <tParserObject, #child, i>
  [255] objcall 352 ............................. <tParserObject.child[i]>
  [258] getobjprop 234 .......................... <tParserObject.child[i].name>
  [260] setlocal 9 .............................. tName = tParserObject.child[i].name
  [262] getlocal 9 .............................. <tName>
  [264] pushcons 99 ............................. <"animationSet">
  [266] eq ...................................... <tName = "animationSet">
  [267] jmpifz [675] ............................ if tName = "animationSet" then
  [270] pushint8 1 .............................. <1>
  [272] setlocal 10
  [274] getlocal 10
  [276] getlocal 5 .............................. <tParserObject>
  [278] pushsymb 639 ............................ <#child>
  [281] getlocal 8 .............................. <i>
  [283] pusharglist 3 ........................... <tParserObject, #child, i>
  [285] objcall 352 ............................. <tParserObject.child[i]>
  [288] pushsymb 639 ............................ <#child>
  [291] pusharglist 2 ........................... <tParserObject.child[i], #child>
  [293] objcall 172 ............................. <tParserObject.child[i].child.count>
  [295] lteq
  [296] jmpifz [675] ............................ repeat with j = 1 to tParserObject.child[i].child.count
  [299] getlocal 5 .............................. <tParserObject>
  [301] pushsymb 639 ............................ <#child>
  [304] getlocal 8 .............................. <i>
  [306] pusharglist 3 ........................... <tParserObject, #child, i>
  [308] objcall 352 ............................. <tParserObject.child[i]>
  [311] pushsymb 639 ............................ <#child>
  [314] getlocal 10 ............................. <j>
  [316] pusharglist 3 ........................... <tParserObject.child[i], #child, j>
  [318] objcall 311 ............................. <tParserObject.child[i].child[j]>
  [321] setlocal 11 ............................. tElementAction = tParserObject.child[i].child[j]
  [323] getlocal 11 ............................. <tElementAction>
  [325] getobjprop 234 .......................... <tElementAction.name>
  [327] pushcons 89 ............................. <"action">
  [329] eq ...................................... <tElementAction.name = "action">
  [330] jmpifz [652] ............................ if tElementAction.name = "action" then
  [333] pusharglist 0 ........................... <>
  [335] extcall 101 ............................. <VOID>
  [337] setlocal 12 ............................. tID = VOID
  [339] pushint8 1 .............................. <1>
  [341] setlocal 13
  [343] getlocal 13
  [345] getlocal 11 ............................. <tElementAction>
  [347] pushsymb 657 ............................ <#attributeName>
  [350] pusharglist 2 ........................... <tElementAction, #attributeName>
  [352] objcall 172 ............................. <tElementAction.attributeName.count>
  [354] lteq
  [355] jmpifz [407] ............................ repeat with l = 1 to tElementAction.attributeName.count
  [358] getlocal 11 ............................. <tElementAction>
  [360] pushsymb 657 ............................ <#attributeName>
  [363] getlocal 13 ............................. <l>
  [365] pusharglist 3 ........................... <tElementAction, #attributeName, l>
  [367] objcall 311 ............................. <tElementAction.attributeName[l]>
  [370] setlocal 9 .............................. tName = tElementAction.attributeName[l]
  [372] getlocal 11 ............................. <tElementAction>
  [374] pushsymb 658 ............................ <#attributeValue>
  [377] getlocal 13 ............................. <l>
  [379] pusharglist 3 ........................... <tElementAction, #attributeValue, l>
  [381] objcall 311 ............................. <tElementAction.attributeValue[l]>
  [384] setlocal 14 ............................. tValue = tElementAction.attributeValue[l]
  [386] getlocal 9 .............................. <tName>
  [388] pushcons 27 ............................. <"id">
  [390] eq ...................................... <tName = "id">
  [391] jmpifz [398] ............................ if tName = "id" then
  [394] getlocal 14 ............................. <tValue>
  [396] setlocal 12 ............................. tID = tValue
  [398] pushint8 1
  [400] getlocal 13
  [402] add
  [403] setlocal 13
  [405] endrepeat [343]
  [407] getlocal 12 ............................. <tID>
  [409] pusharglist 1 ........................... <tID>
  [411] extcall 194 ............................. <voidp(tID)>
  [413] not ..................................... <not voidp(tID)>
  [414] jmpifz [649] ............................ if not voidp(tID) then
  [417] pushint8 1 .............................. <1>
  [419] setlocal 15
  [421] getlocal 15
  [423] getlocal 11 ............................. <tElementAction>
  [425] pushsymb 639 ............................ <#child>
  [428] pusharglist 2 ........................... <tElementAction, #child>
  [430] objcall 172 ............................. <tElementAction.child.count>
  [432] lteq
  [433] jmpifz [649] ............................ repeat with k = 1 to tElementAction.child.count
  [436] getlocal 11 ............................. <tElementAction>
  [438] pushsymb 639 ............................ <#child>
  [441] getlocal 15 ............................. <k>
  [443] pusharglist 3 ........................... <tElementAction, #child, k>
  [445] objcall 311 ............................. <tElementAction.child[k]>
  [448] setlocal 16 ............................. tElementPart = tElementAction.child[k]
  [450] getlocal 16 ............................. <tElementPart>
  [452] getobjprop 234 .......................... <tElementPart.name>
  [454] pushcons 69 ............................. <"part">
  [456] eq ...................................... <tElementPart.name = "part">
  [457] jmpifz [640] ............................ if tElementPart.name = "part" then
  [460] pushcons 72 ............................. <"set-type">
  [462] pusharglist 0 ........................... <>
  [464] extcall 101 ............................. <VOID>
  [466] pusharglist 2 ........................... <["set-type": VOID]>
  [468] pushproplist ............................ <["set-type": VOID]>
  [469] setlocal 17 ............................. tAttributes = ["set-type": VOID]
  [471] pushint8 1 .............................. <1>
  [473] setlocal 13
  [475] getlocal 13
  [477] getlocal 16 ............................. <tElementPart>
  [479] pushsymb 657 ............................ <#attributeName>
  [482] pusharglist 2 ........................... <tElementPart, #attributeName>
  [484] objcall 172 ............................. <tElementPart.attributeName.count>
  [486] lteq
  [487] jmpifz [537] ............................ repeat with l = 1 to tElementPart.attributeName.count
  [490] getlocal 16 ............................. <tElementPart>
  [492] pushsymb 657 ............................ <#attributeName>
  [495] getlocal 13 ............................. <l>
  [497] pusharglist 3 ........................... <tElementPart, #attributeName, l>
  [499] objcall 311 ............................. <tElementPart.attributeName[l]>
  [502] setlocal 9 .............................. tName = tElementPart.attributeName[l]
  [504] getlocal 16 ............................. <tElementPart>
  [506] pushsymb 658 ............................ <#attributeValue>
  [509] getlocal 13 ............................. <l>
  [511] pusharglist 3 ........................... <tElementPart, #attributeValue, l>
  [513] objcall 311 ............................. <tElementPart.attributeValue[l]>
  [516] setlocal 14 ............................. tValue = tElementPart.attributeValue[l]
  [518] getlocal 17 ............................. <tAttributes>
  [520] getlocal 9 .............................. <tName>
  [522] getlocal 14 ............................. <tValue>
  [524] pusharglistnoret 3 ...................... <tAttributes, tName, tValue>
  [526] objcall 175 ............................. tAttributes[tName] = tValue
  [528] pushint8 1
  [530] getlocal 13
  [532] add
  [533] setlocal 13
  [535] endrepeat [475]
  [537] getlocal 17 ............................. <tAttributes>
  [539] pushcons 72 ............................. <"set-type">
  [541] pusharglist 2 ........................... <tAttributes, "set-type">
  [543] objcall 173 ............................. <tAttributes["set-type"]>
  [545] pusharglist 1 ........................... <tAttributes["set-type"]>
  [547] extcall 194 ............................. <voidp(tAttributes["set-type"])>
  [549] not ..................................... <not voidp(tAttributes["set-type"])>
  [550] jmpifz [627] ............................ if not voidp(tAttributes["set-type"]) then
  [553] getparam 0 .............................. <me>
  [555] getlocal 16 ............................. <tElementPart>
  [557] pusharglist 2 ........................... <me, tElementPart>
  [559] objcall 684 ............................. <me.parseFrameListXML(tElementPart)>
  [562] setlocal 18 ............................. tFrameList = me.parseFrameListXML(tElementPart)
  [564] getlocal 0 .............................. <tAnimationData>
  [566] getlocal 17 ............................. <tAttributes>
  [568] pushcons 72 ............................. <"set-type">
  [570] pusharglist 2 ........................... <tAttributes, "set-type">
  [572] objcall 173 ............................. <tAttributes["set-type"]>
  [574] pusharglist 2 ........................... <tAnimationData, tAttributes["set-type"]>
  [576] objcall 173 ............................. <tAnimationData[tAttributes["set-type"]]>
  [578] pusharglist 1 ........................... <tAnimationData[tAttributes["set-type"]]>
  [580] extcall 194 ............................. <voidp(tAnimationData[tAttributes["set-type"]])>
  [582] jmpifz [602] ............................ if voidp(tAnimationData[tAttributes["set-type"]]) then
  [585] getlocal 0 .............................. <tAnimationData>
  [587] getlocal 17 ............................. <tAttributes>
  [589] pushcons 72 ............................. <"set-type">
  [591] pusharglist 2 ........................... <tAttributes, "set-type">
  [593] objcall 173 ............................. <tAttributes["set-type"]>
  [595] pusharglist 0 ........................... <[:]>
  [597] pushproplist ............................ <[:]>
  [598] pusharglistnoret 3 ...................... <tAnimationData, tAttributes["set-type"], [:]>
  [600] objcall 175 ............................. tAnimationData[tAttributes["set-type"]] = [:]
  [602] getlocal 0 .............................. <tAnimationData>
  [604] getlocal 17 ............................. <tAttributes>
  [606] pushcons 72 ............................. <"set-type">
  [608] pusharglist 2 ........................... <tAttributes, "set-type">
  [610] objcall 173 ............................. <tAttributes["set-type"]>
  [612] pusharglist 2 ........................... <tAnimationData, tAttributes["set-type"]>
  [614] objcall 173 ............................. <tAnimationData[tAttributes["set-type"]]>
  [616] getlocal 12 ............................. <tID>
  [618] getlocal 18 ............................. <tFrameList>
  [620] pusharglistnoret 3 ...................... <tAnimationData[tAttributes["set-type"]], tID, tFrameList>
  [622] objcall 175 ............................. tAnimationData[tAttributes["set-type"]][tID] = tFrameList
  [624] jmp [640] ............................... next repeat
  [627] getparam 0 .............................. <me>
  [629] pushcons 100 ............................ <"missing set-type attribute for part in action element!">
  [631] pushsymb 677 ............................ <#loadPartSetXML>
  [634] pushsymb 177 ............................ <#major>
  [636] pusharglistnoret 4 ...................... <me, "missing set-type attribute for part in action element!", #loadPartSetXML, #major>
  [638] extcall 176 ............................. error(me, "missing set-type attribute for part in action element!", #loadPartSetXML, #major)
  [640] pushint8 1
  [642] getlocal 15
  [644] add
  [645] setlocal 15
  [647] endrepeat [421]
  [649] jmp [665] ............................... next repeat
  [652] getparam 0 .............................. <me>
  [654] pushcons 101 ............................ <"missing id attribute in action element!">
  [656] pushsymb 677 ............................ <#loadPartSetXML>
  [659] pushsymb 177 ............................ <#major>
  [661] pusharglistnoret 4 ...................... <me, "missing id attribute in action element!", #loadPartSetXML, #major>
  [663] extcall 176 ............................. error(me, "missing id attribute in action element!", #loadPartSetXML, #major)
  [665] pushint8 1
  [667] getlocal 10
  [669] add
  [670] setlocal 10
  [672] endrepeat [274]
  [675] pushint8 1
  [677] getlocal 8
  [679] add
  [680] setlocal 8
  [682] endrepeat [231]
  [685] pushcons 102 ............................ <"human.parts.animationList">
  [687] getlocal 0 .............................. <tAnimationData>
  [689] pusharglistnoret 2 ...................... <"human.parts.animationList", tAnimationData>
  [691] extcall 688 ............................. setVariable("human.parts.animationList", tAnimationData)
  [694] pushcons 33 ............................. <"animation.xml.loaded">
  [696] pushint8 1 .............................. <1>
  [698] pusharglistnoret 2 ...................... <"animation.xml.loaded", 1>
  [700] extcall 688 ............................. setVariable("animation.xml.loaded", 1)
  [703] getparam 0 .............................. <me>
  [705] pusharglistnoret 1 ...................... <me>
  [707] objcall 673 ............................. me.checkDataLoaded()
  [710] getprop 690 ............................. <pDontProfile>
  [713] not ..................................... <not pDontProfile>
  [714] jmpifz [724] ............................ if not pDontProfile then
  [717] pushcons 96 ............................. <"Figure System::animationSetLoaded">
  [719] pusharglistnoret 1 ...................... <"Figure System::animationSetLoaded">
  [721] extcall 729 ............................. finishProfilingTask("Figure System::animationSetLoaded")
  [724] ret
end

on parsePartListXML me, tElement
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tPartList = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1 .............................. tIndex = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 2
  [ 13] getlocal 2
  [ 15] getparam 1 .............................. <tElement>
  [ 17] pushsymb 639 ............................ <#child>
  [ 20] pusharglist 2 ........................... <tElement, #child>
  [ 22] objcall 172 ............................. <tElement.child.count>
  [ 24] lteq
  [ 25] jmpifz [193] ............................ repeat with i = 1 to tElement.child.count
  [ 28] getparam 1 .............................. <tElement>
  [ 30] pushsymb 639 ............................ <#child>
  [ 33] getlocal 2 .............................. <i>
  [ 35] pusharglist 3 ........................... <tElement, #child, i>
  [ 37] objcall 311 ............................. <tElement.child[i]>
  [ 40] setlocal 3 .............................. tElementPart = tElement.child[i]
  [ 42] getlocal 3 .............................. <tElementPart>
  [ 44] getobjprop 234 .......................... <tElementPart.name>
  [ 46] pushcons 69 ............................. <"part">
  [ 48] eq ...................................... <tElementPart.name = "part">
  [ 49] jmpifz [184] ............................ if tElementPart.name = "part" then
  [ 52] pushcons 72 ............................. <"set-type">
  [ 54] pusharglist 0 ........................... <>
  [ 56] extcall 101 ............................. <VOID>
  [ 58] pusharglist 2 ........................... <["set-type": VOID]>
  [ 60] pushproplist ............................ <["set-type": VOID]>
  [ 61] setlocal 4 .............................. tAttributes = ["set-type": VOID]
  [ 63] pushint8 1 .............................. <1>
  [ 65] setlocal 5
  [ 67] getlocal 5
  [ 69] getlocal 3 .............................. <tElementPart>
  [ 71] pushsymb 657 ............................ <#attributeName>
  [ 74] pusharglist 2 ........................... <tElementPart, #attributeName>
  [ 76] objcall 172 ............................. <tElementPart.attributeName.count>
  [ 78] lteq
  [ 79] jmpifz [129] ............................ repeat with l = 1 to tElementPart.attributeName.count
  [ 82] getlocal 3 .............................. <tElementPart>
  [ 84] pushsymb 657 ............................ <#attributeName>
  [ 87] getlocal 5 .............................. <l>
  [ 89] pusharglist 3 ........................... <tElementPart, #attributeName, l>
  [ 91] objcall 311 ............................. <tElementPart.attributeName[l]>
  [ 94] setlocal 6 .............................. tName = tElementPart.attributeName[l]
  [ 96] getlocal 3 .............................. <tElementPart>
  [ 98] pushsymb 658 ............................ <#attributeValue>
  [101] getlocal 5 .............................. <l>
  [103] pusharglist 3 ........................... <tElementPart, #attributeValue, l>
  [105] objcall 311 ............................. <tElementPart.attributeValue[l]>
  [108] setlocal 7 .............................. tValue = tElementPart.attributeValue[l]
  [110] getlocal 4 .............................. <tAttributes>
  [112] getlocal 6 .............................. <tName>
  [114] getlocal 7 .............................. <tValue>
  [116] pusharglistnoret 3 ...................... <tAttributes, tName, tValue>
  [118] objcall 175 ............................. tAttributes[tName] = tValue
  [120] pushint8 1
  [122] getlocal 5
  [124] add
  [125] setlocal 5
  [127] endrepeat [ 67]
  [129] getlocal 4 .............................. <tAttributes>
  [131] pushcons 72 ............................. <"set-type">
  [133] pusharglist 2 ........................... <tAttributes, "set-type">
  [135] objcall 173 ............................. <tAttributes["set-type"]>
  [137] pusharglist 1 ........................... <tAttributes["set-type"]>
  [139] extcall 194 ............................. <voidp(tAttributes["set-type"])>
  [141] not ..................................... <not voidp(tAttributes["set-type"])>
  [142] jmpifz [171] ............................ if not voidp(tAttributes["set-type"]) then
  [145] getlocal 0 .............................. <tPartList>
  [147] getlocal 1 .............................. <tIndex>
  [149] getlocal 4 .............................. <tAttributes>
  [151] pushcons 72 ............................. <"set-type">
  [153] pusharglist 2 ........................... <tAttributes, "set-type">
  [155] objcall 173 ............................. <tAttributes["set-type"]>
  [157] pusharglistnoret 3 ...................... <tPartList, tIndex, tAttributes["set-type"]>
  [159] objcall 175 ............................. tPartList[tIndex] = tAttributes["set-type"]
  [161] getlocal 1 .............................. <tIndex>
  [163] pushint8 1 .............................. <1>
  [165] add ..................................... <tIndex + 1>
  [166] setlocal 1 .............................. tIndex = tIndex + 1
  [168] jmp [184] ............................... next repeat
  [171] getparam 0 .............................. <me>
  [173] pushcons 103 ............................ <"missing set-type attribute for part!">
  [175] pushsymb 683 ............................ <#parsePartListXML>
  [178] pushsymb 177 ............................ <#major>
  [180] pusharglistnoret 4 ...................... <me, "missing set-type attribute for part!", #parsePartListXML, #major>
  [182] extcall 176 ............................. error(me, "missing set-type attribute for part!", #parsePartListXML, #major)
  [184] pushint8 1
  [186] getlocal 2
  [188] add
  [189] setlocal 2
  [191] endrepeat [ 13]
  [193] getlocal 0 .............................. <tPartList>
  [195] pusharglistnoret 1 ...................... <tPartList>
  [197] extcall 189 ............................. return tPartList
  [199] ret
end

on parseFrameListXML me, tElement
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tFrameList = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1 .............................. tIndex = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setlocal 2
  [ 13] getlocal 2
  [ 15] getparam 1 .............................. <tElement>
  [ 17] pushsymb 639 ............................ <#child>
  [ 20] pusharglist 2 ........................... <tElement, #child>
  [ 22] objcall 172 ............................. <tElement.child.count>
  [ 24] lteq
  [ 25] jmpifz [193] ............................ repeat with i = 1 to tElement.child.count
  [ 28] getparam 1 .............................. <tElement>
  [ 30] pushsymb 639 ............................ <#child>
  [ 33] getlocal 2 .............................. <i>
  [ 35] pusharglist 3 ........................... <tElement, #child, i>
  [ 37] objcall 311 ............................. <tElement.child[i]>
  [ 40] setlocal 3 .............................. tElementFrame = tElement.child[i]
  [ 42] getlocal 3 .............................. <tElementFrame>
  [ 44] getobjprop 234 .......................... <tElementFrame.name>
  [ 46] pushcons 104 ............................ <"frame">
  [ 48] eq ...................................... <tElementFrame.name = "frame">
  [ 49] jmpifz [184] ............................ if tElementFrame.name = "frame" then
  [ 52] pushcons 105 ............................ <"number">
  [ 54] pusharglist 0 ........................... <>
  [ 56] extcall 101 ............................. <VOID>
  [ 58] pusharglist 2 ........................... <["number": VOID]>
  [ 60] pushproplist ............................ <["number": VOID]>
  [ 61] setlocal 4 .............................. tAttributes = ["number": VOID]
  [ 63] pushint8 1 .............................. <1>
  [ 65] setlocal 5
  [ 67] getlocal 5
  [ 69] getlocal 3 .............................. <tElementFrame>
  [ 71] pushsymb 657 ............................ <#attributeName>
  [ 74] pusharglist 2 ........................... <tElementFrame, #attributeName>
  [ 76] objcall 172 ............................. <tElementFrame.attributeName.count>
  [ 78] lteq
  [ 79] jmpifz [129] ............................ repeat with l = 1 to tElementFrame.attributeName.count
  [ 82] getlocal 3 .............................. <tElementFrame>
  [ 84] pushsymb 657 ............................ <#attributeName>
  [ 87] getlocal 5 .............................. <l>
  [ 89] pusharglist 3 ........................... <tElementFrame, #attributeName, l>
  [ 91] objcall 311 ............................. <tElementFrame.attributeName[l]>
  [ 94] setlocal 6 .............................. tName = tElementFrame.attributeName[l]
  [ 96] getlocal 3 .............................. <tElementFrame>
  [ 98] pushsymb 658 ............................ <#attributeValue>
  [101] getlocal 5 .............................. <l>
  [103] pusharglist 3 ........................... <tElementFrame, #attributeValue, l>
  [105] objcall 311 ............................. <tElementFrame.attributeValue[l]>
  [108] setlocal 7 .............................. tValue = tElementFrame.attributeValue[l]
  [110] getlocal 4 .............................. <tAttributes>
  [112] getlocal 6 .............................. <tName>
  [114] getlocal 7 .............................. <tValue>
  [116] pusharglistnoret 3 ...................... <tAttributes, tName, tValue>
  [118] objcall 175 ............................. tAttributes[tName] = tValue
  [120] pushint8 1
  [122] getlocal 5
  [124] add
  [125] setlocal 5
  [127] endrepeat [ 67]
  [129] getlocal 4 .............................. <tAttributes>
  [131] pushcons 105 ............................ <"number">
  [133] pusharglist 2 ........................... <tAttributes, "number">
  [135] objcall 173 ............................. <tAttributes["number"]>
  [137] pusharglist 1 ........................... <tAttributes["number"]>
  [139] extcall 194 ............................. <voidp(tAttributes["number"])>
  [141] not ..................................... <not voidp(tAttributes["number"])>
  [142] jmpifz [171] ............................ if not voidp(tAttributes["number"]) then
  [145] getlocal 0 .............................. <tFrameList>
  [147] getlocal 1 .............................. <tIndex>
  [149] getlocal 4 .............................. <tAttributes>
  [151] pushcons 105 ............................ <"number">
  [153] pusharglist 2 ........................... <tAttributes, "number">
  [155] objcall 173 ............................. <tAttributes["number"]>
  [157] pusharglistnoret 3 ...................... <tFrameList, tIndex, tAttributes["number"]>
  [159] objcall 175 ............................. tFrameList[tIndex] = tAttributes["number"]
  [161] getlocal 1 .............................. <tIndex>
  [163] pushint8 1 .............................. <1>
  [165] add ..................................... <tIndex + 1>
  [166] setlocal 1 .............................. tIndex = tIndex + 1
  [168] jmp [184] ............................... next repeat
  [171] getparam 0 .............................. <me>
  [173] pushcons 106 ............................ <"missing number attribute for frame!">
  [175] pushsymb 684 ............................ <#parseFrameListXML>
  [178] pushsymb 177 ............................ <#major>
  [180] pusharglistnoret 4 ...................... <me, "missing number attribute for frame!", #parseFrameListXML, #major>
  [182] extcall 176 ............................. error(me, "missing number attribute for frame!", #parseFrameListXML, #major)
  [184] pushint8 1
  [186] getlocal 2
  [188] add
  [189] setlocal 2
  [191] endrepeat [ 13]
  [193] getlocal 0 .............................. <tFrameList>
  [195] pusharglistnoret 1 ...................... <tFrameList>
  [197] extcall 189 ............................. return tFrameList
  [199] ret
end

on regMsgList me, tBool
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tMsgs = [:]
  [  5] pusharglist 0 ........................... <[:]>
  [  7] pushproplist ............................ <[:]>
  [  8] setlocal 1 .............................. tCmds = [:]
  [ 10] getlocal 1 .............................. <tCmds>
  [ 12] pushcons 107 ............................ <"GETAVAILABLESETS">
  [ 14] pushint8 9 .............................. <9>
  [ 16] pusharglistnoret 3 ...................... <tCmds, "GETAVAILABLESETS", 9>
  [ 18] objcall 332 ............................. tCmds.setaProp("GETAVAILABLESETS", 9)
  [ 21] getparam 1 .............................. <tBool>
  [ 23] jmpifz [ 67] ............................ if tBool then / else
  [ 26] pushcons 108 ............................ <"connection.info.id">
  [ 28] pusharglist 1 ........................... <"connection.info.id">
  [ 30] extcall 164 ............................. <getVariable("connection.info.id")>
  [ 32] getparam 0 .............................. <me>
  [ 34] pusharglist 1 ........................... <me>
  [ 36] objcall 207 ............................. <me.getID()>
  [ 38] getlocal 0 .............................. <tMsgs>
  [ 40] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tMsgs>
  [ 42] extcall 752 ............................. registerListener(getVariable("connection.info.id"), me.getID(), tMsgs)
  [ 45] pushcons 108 ............................ <"connection.info.id">
  [ 47] pusharglist 1 ........................... <"connection.info.id">
  [ 49] extcall 164 ............................. <getVariable("connection.info.id")>
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 207 ............................. <me.getID()>
  [ 57] getlocal 1 .............................. <tCmds>
  [ 59] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tCmds>
  [ 61] extcall 753 ............................. registerCommands(getVariable("connection.info.id"), me.getID(), tCmds)
  [ 64] jmp [105]
  [ 67] pushcons 108 ............................ <"connection.info.id">
  [ 69] pusharglist 1 ........................... <"connection.info.id">
  [ 71] extcall 164 ............................. <getVariable("connection.info.id")>
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglist 1 ........................... <me>
  [ 77] objcall 207 ............................. <me.getID()>
  [ 79] getlocal 0 .............................. <tMsgs>
  [ 81] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tMsgs>
  [ 83] extcall 754 ............................. unregisterListener(getVariable("connection.info.id"), me.getID(), tMsgs)
  [ 86] pushcons 108 ............................ <"connection.info.id">
  [ 88] pusharglist 1 ........................... <"connection.info.id">
  [ 90] extcall 164 ............................. <getVariable("connection.info.id")>
  [ 92] getparam 0 .............................. <me>
  [ 94] pusharglist 1 ........................... <me>
  [ 96] objcall 207 ............................. <me.getID()>
  [ 98] getlocal 1 .............................. <tCmds>
  [100] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tCmds>
  [102] extcall 755 ............................. unregisterCommands(getVariable("connection.info.id"), me.getID(), tCmds)
  [105] ret
end
